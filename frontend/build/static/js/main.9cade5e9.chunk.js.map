{"version":3,"sources":["reportWebVitals.js","redux/action-types.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_OUT_REQUEST","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","App","iniState","currentUser","localStorage","getItem","token","decoded","jwt","decode","Date","exp","isValidToken","error","loading","isAuthenticated","authenticationReducer","state","action","type","payload","user","removeItem","createRootReducer","combineReducers","authentication","initState","store","initialState","composeEnhancers","compose","middlewares","thunk","createStore","applyMiddleware","makeStore","WithProvider","ReactDOM","render","document","getElementById"],"mappings":"ibAAA,IAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iCCPDQ,G,+BAAkB,mBAClBC,EAAkB,kBAClBC,EAAkB,kBAElBC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAkB,kBAElBC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAmB,mB,8BCkBjBC,MAlBf,WACE,OAaA,aAZA,CAYA,yB,mCCLIC,EAAU,CACZC,YAAaC,aAAaC,QAAQ,cANV,SAACC,GACzB,IAAIC,EAAUC,IAAIC,OAAOH,GACzB,OAAO,IAAII,KAAmB,IAAdH,EAAQI,KAAc,IAAID,KAASH,EAAU,KAKvDK,CAAaR,aAAaC,QAAQ,eAClC,KACNC,MAAOF,aAAaC,QAAQ,cACtBD,aAAaC,QAAQ,cACrB,KACNQ,MAAM,GACNC,SAAS,EACTC,iBAAiB,GA8CNC,EA3Ce,WAA2B,IAA1BC,EAAyB,uDAAnBf,EAASgB,EAAU,uCACpD,OAAOA,EAAOC,MACV,KAAK3B,EACL,KAAKG,EACL,KAAKG,EACD,kCACOmB,GADP,IAEIH,SAAS,EACTC,iBAAgB,IAExB,KAAKrB,EACL,KAAKG,EACL,KAAKG,EACD,OAAO,2BACAiB,GADP,IAEIH,SAAS,EACTD,MAAOK,EAAOE,QACdjB,YAAa,KACbY,iBAAiB,IAEzB,KAAKnB,EACL,KAAKH,EACD,kCACOwB,GADP,IAEIH,SAAQ,EACRR,MAAOY,EAAOE,QAAQd,MACtBH,YAAae,EAAOE,QAAQC,KAC5BN,iBAAiB,IAEzB,KAAKhB,EAED,OADAK,aAAakB,WAAW,cACxB,2BACOL,GADP,IAEIF,iBAAgB,EAChBD,SAAQ,EACRX,YAAY,KACZG,MAAM,KAEV,QACI,sBAAUW,KChEpBM,EAAoB,kBACxBC,YAAgB,CACdC,oBAGEC,EAAY,CAChBD,eAAgB,CACdtB,YAAa,KACbG,MAAO,GACPO,MAAO,GACPC,SAAS,EACTC,iBAAiB,ICJrB,IAAMY,EDQS,WAA8C,IAA3BC,EAA0B,uDAAXF,EAC3CG,EAAmBC,IACjBC,EAAc,CAACC,KAOfL,EAAQM,YACZV,IACAK,EACAC,EAAiBK,IAAe,WAAf,EAAmBH,KAStC,OAAOJ,EC7BKQ,GAERC,EAAe,kBACnB,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,OAIJU,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,SAQ1DzD,M","file":"static/js/main.9cade5e9.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SIGN_IN_REQUEST = \"SIGN_IN_REQUEST\";\nexport const SIGN_IN_SUCCESS = \"SIGN_IN_SUCCESS\";\nexport const SIGN_IN_FAILURE = \"SIGN_IN_FAILURE\";\n\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\n\nexport const SIGN_OUT_REQUEST = \"SIGN_OUT_REQUEST\";\nexport const SIGN_OUT_SUCCESS = \"SIGN_OUT_SUCCESS\";\nexport const SIGN_OUT_FAILURE = \"SIGN_OUT_FAILURE\";","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport './App.css';\nimport NavBar from './components/Navbar';\nimport SignIn from './pages/Signin';\nimport SignUp from \"./pages/Signup\";\nimport Home from \"./pages/Home\"\nimport { UserRoute } from \"./components/privateRoute\"\n\nfunction App() {\n  return (\n  //   <Router>\n  //   <NavBar />\n  //   <Route path=\"/signup\" exact>\n  //     <SignUp />\n  //   </Route>\n  //   <Route path=\"/\" exact>\n  //     <SignIn />\n  //   </Route>\n  //   <UserRoute path=\"/home\">\n  //     <Home />\n  //   </UserRoute>\n  // </Router>\n  <div>hey</div>\n  );\n}\n\nexport default App;\n","import jwt from 'jsonwebtoken';\n\nimport{\n    SIGN_IN_FAILURE,\n    SIGN_IN_REQUEST,\n    SIGN_IN_SUCCESS,\n    SIGN_UP_FAILURE,\n    SIGN_UP_REQUEST,\n    SIGN_UP_SUCCESS,\n    SIGN_OUT_FAILURE,\n    SIGN_OUT_REQUEST,\n    SIGN_OUT_SUCCESS\n} from './action-types';\n\nexport const isValidToken = (token) =>{\n    let decoded = jwt.decode(token);\n    return new Date(decoded.exp * 1000) > new Date() ? decoded : null;\n};\n\nconst iniState ={\n    currentUser: localStorage.getItem(\"USER-TOKEN\")\n        ? isValidToken(localStorage.getItem(\"USER-TOKEN\"))\n        : null,\n    token: localStorage.getItem(\"USER-TOKEN\")\n        ? localStorage.getItem(\"USER-TOKEN\")\n        : null,\n    error:\"\",\n    loading: false,\n    isAuthenticated: false,\n};\n\nconst authenticationReducer = (state=iniState,action) =>{\n    switch(action.type){\n        case SIGN_IN_REQUEST:\n        case SIGN_UP_REQUEST:\n        case SIGN_OUT_REQUEST:\n            return{\n                ...state,\n                loading: true,\n                isAuthenticated:false,\n            };\n        case SIGN_IN_FAILURE:\n        case SIGN_UP_FAILURE:\n        case SIGN_OUT_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n                currentUser: null,\n                isAuthenticated: false,\n            };\n        case SIGN_UP_SUCCESS:\n        case SIGN_IN_SUCCESS:\n            return{\n                ...state,\n                loading:false,\n                token: action.payload.token,\n                currentUser: action.payload.user,\n                isAuthenticated: true,\n            };\n        case SIGN_OUT_SUCCESS:\n            localStorage.removeItem(\"USER-TOKEN\");\n            return{\n                ...state,\n                isAuthenticated:false,\n                loading:false,\n                currentUser:null,\n                token:\"\",\n            };\n            default:\n                return{...state};\n    }\n};\n\nexport default authenticationReducer;","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\n\nimport authentication from \"./reducer\";\n\nconst createRootReducer = () =>\n  combineReducers({\n    authentication,\n  });\n\nconst initState = {\n  authentication: {\n    currentUser: null,\n    token: \"\",\n    error: \"\",\n    loading: false,\n    isAuthenticated: false,\n  },\n}\n\nexport default function makeStore(initialState = initState) {\n  let composeEnhancers = compose;\n  const middlewares = [thunk];\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n    }\n  }\n  const store = createStore(\n    createRootReducer(),\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n\n  if (module.hot) {\n    module.hot.accept(\"./reducer\", () => {\n      const nextReducer = require(\"./reducer\").default;\n      store.replaceReducer(nextReducer);\n    });\n  }\n  return store;\n}","\nimport reportWebVitals from './reportWebVitals';\n\n  \nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport makeStore from \"./redux/store\";\n\nconst store = makeStore();\n\nconst WithProvider = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<WithProvider />, document.getElementById(\"root\"));\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nreportWebVitals();"],"sourceRoot":""}