{"ast":null,"code":"var _jsxFileName = \"/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/pages/DeleteMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchMovie, deleteMovie } from '../redux/action-creators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeleteMovie = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    movieData,\n    loading,\n    error\n  } = useSelector(state => state.fetchMoviesReducer);\n  const {\n    deleteMovieData\n  } = useSelector(state => state.deleteMoviesReducer);\n  const [test, setTest] = useState(movieData);\n\n  const removeData = (id, flag) => {\n    if (flag) {\n      setTest(movieData.filter(post => id !== post.id));\n    } //         dispatch(deleteMovie(deleteMovieData))\n\n  };\n\n  useEffect(() => {\n    dispatch(fetchMovie()); //    dispatch(deleteMovie(removeData))\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(\"movie data\", movieData), \"DELETE\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: movieData && movieData.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"title \", post.title, \" rating \", post.rating, \"  year \", post.year, \" decription \", post.decription]\n          }, post._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              dispatch(deleteMovie({\n                id: post._id\n              }));\n              removeData(post._id);\n            },\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeleteMovie, \"Zo+kLRmFDt0kTjHaZvALthFnqHY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = DeleteMovie;\nexport default DeleteMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteMovie\");","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/pages/DeleteMovie.js"],"names":["React","useEffect","useState","useDispatch","useSelector","fetchMovie","deleteMovie","DeleteMovie","dispatch","movieData","loading","error","state","fetchMoviesReducer","deleteMovieData","deleteMoviesReducer","test","setTest","removeData","id","flag","filter","post","console","log","map","title","rating","year","decription","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAAQC,UAAR,EAAmBC,WAAnB,QAAqC,0BAArC;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAExB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAO;AAAEM,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAgCP,WAAW,CAAEQ,KAAD,IAAYA,KAAK,CAACC,kBAAnB,CAAlD;AACA,QAAO;AAAEC,IAAAA;AAAF,MAAsBV,WAAW,CAAEQ,KAAD,IAAYA,KAAK,CAACG,mBAAnB,CAAxC;AAEA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAef,QAAQ,CAACO,SAAD,CAA7B;;AAEA,QAAMS,UAAU,GAAG,CAACC,EAAD,EAAIC,IAAJ,KAAa;AAC1B,QAAGA,IAAH,EAAQ;AAEJH,MAAAA,OAAO,CAACR,SAAS,CAACY,MAAV,CAAiBC,IAAI,IAAIH,EAAE,KAAKG,IAAI,CAACH,EAArC,CAAD,CAAP;AACH,KAJyB,CAMlC;;AAEC,GARC;;AAUAlB,EAAAA,SAAS,CAAC,MAAM;AAEfO,IAAAA,QAAQ,CAAEH,UAAU,EAAZ,CAAR,CAFe,CAGlB;AAEC,GALU,EAKR,CAACG,QAAD,CALQ,CAAT;AAOA,sBAEE;AAAA,eAEEe,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBf,SAAzB,CAFF,yBAIE;AAAA,iBACGC,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADd,EAEGC,KAAK,iBAAI;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,cAFZ,eAGA;AAAA,kBAEIF,SAAS,IAAIA,SAAS,CAACgB,GAAV,CAAcH,IAAI,iBAC3B;AAAA,kCACF;AAAA,iCAA2BA,IAAI,CAACI,KAAhC,cAA+CJ,IAAI,CAACK,MAApD,aAAmEL,IAAI,CAACM,IAAxE,kBAA0FN,IAAI,CAACO,UAA/F;AAAA,aAASP,IAAI,CAACQ,GAAd;AAAA;AAAA;AAAA;AAAA,kBADE,eAIF;AAAS,YAAA,OAAO,EAAE,MAAK;AAAEtB,cAAAA,QAAQ,CAACF,WAAW,CAAC;AAACa,gBAAAA,EAAE,EAACG,IAAI,CAACQ;AAAT,eAAD,CAAZ,CAAR;AACjBZ,cAAAA,UAAU,CAACI,IAAI,CAACQ,GAAN,CAAV;AACX,aAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJE;AAAA;AAAA;AAAA;AAAA;AAAA,gBADS;AAFjB;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA6BD,CAvDD;;GAAMvB,W;UAEaJ,W,EAEsBC,W,EACVA,W;;;KALzBG,W;AAwDN,eAAeA,WAAf","sourcesContent":["import React, { useEffect,useState} from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {fetchMovie,deleteMovie} from '../redux/action-creators'\n\n\nconst DeleteMovie = () => {\n    \n  const dispatch = useDispatch();\n \n  const  { movieData, loading, error } = useSelector((state) =>  state.fetchMoviesReducer);\n  const  { deleteMovieData } = useSelector((state) =>  state.deleteMoviesReducer);\n\n  const [test,setTest]=useState(movieData);\n\n  const removeData = (id,flag) => {\n        if(flag){\n           \n            setTest(movieData.filter(post => id !== post.id))\n        }\n     \n//         dispatch(deleteMovie(deleteMovieData))\n \n}\n \n  useEffect(() => {\n   \n   dispatch( fetchMovie());\n//    dispatch(deleteMovie(removeData))\n   \n}, [dispatch]);\n\n  return (\n    \n    <div>\n\n     {console.log(\"movie data\",movieData)}\n     DELETE\n      <div>\n        {loading && <div>LOADING...</div>}\n        {error && <div>{error}</div>}\n      <ul>\n          {\n          movieData && movieData.map(post => (\n              <div>\n            <li key={post._id} >title {post.title} rating {post.rating}  year {post.year} decription {post.decription}\n            \n            </li>\n            <button  onClick={() =>{ dispatch(deleteMovie({id:post._id}))\n                    removeData(post._id)\n        }} >\n                x\n            </button>\n            </div>\n           \n           \n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\nexport default DeleteMovie"]},"metadata":{},"sourceType":"module"}