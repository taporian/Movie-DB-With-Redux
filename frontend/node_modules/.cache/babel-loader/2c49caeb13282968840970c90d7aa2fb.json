{"ast":null,"code":"import axios from \"axios\";\nimport { SIGN_IN_FAILURE, SIGN_IN_REQUEST, SIGN_IN_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_OUT_FAILURE, SIGN_OUT_REQUEST, SIGN_OUT_SUCCESS, FETCH_MOVIES_SUCCESS, FETCH_MOVIES_FAILURE, FETCH_MOVIES_REQUEST, CREATE_MOVIES_SUCCESS, CREATE_MOVIES_FAILURE, CREATE_MOVIES_REQUEST, DELETE_MOVIES_SUCCESS, DELETE_MOVIES_FAILURE, DELETE_MOVIES_REQUEST, UPDATE_MOVIES_SUCCESS, UPDATE_MOVIES_FAILURE, UPDATE_MOVIES_REQUEST, FETCH_ONE_MOVIE_REQUEST, FETCH_ONE_MOVIE_SUCCESS, FETCH_ONE_MOVIE_FAILURE, FILTER_MOVIE_REQUEST, FILTER_MOVIE_SUCCESS, FILTER_MOVIE_FAILURE, EDIT_ON } from './action-types';\nimport { toast } from \"react-toastify\";\nimport { URL } from \"../components/URL\"; // Sign up action creators\n\nconst signUpRequest = () => {\n  return {\n    type: SIGN_UP_REQUEST\n  };\n};\n\nconst signUpSuccess = user => {\n  return {\n    type: SIGN_UP_SUCCESS,\n    payload: {\n      user\n    }\n  };\n};\n\nconst signUpFailure = error => {\n  return {\n    type: SIGN_UP_FAILURE,\n    payload: error\n  };\n};\n\nexport const signUp = (user, history) => {\n  return async function (dispatch) {\n    dispatch(signUpRequest());\n\n    try {\n      const res = await axios({\n        method: \"post\",\n        url: URL + '/signUp',\n        data: user\n      });\n      const {\n        data\n      } = res.data;\n      dispatch(signUpSuccess(data));\n      history.push('/');\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        dispatch(signUpFailure(error.response.data));\n      } else {\n        dispatch(signUpFailure(error));\n      }\n    }\n  };\n}; //Sign in action creators\n\nconst signInRequest = () => {\n  return {\n    type: SIGN_IN_REQUEST\n  };\n};\n\nconst signInSuccess = token => {\n  return {\n    type: SIGN_IN_SUCCESS,\n    payload: {\n      token\n    }\n  };\n};\n\nconst signInFailure = error => {\n  return {\n    type: SIGN_IN_FAILURE,\n    payload: error\n  };\n};\n\nexport const signIn = (payload, history) => {\n  return async function (dispatch) {\n    dispatch(signInRequest);\n\n    try {\n      const res = await axios({\n        method: \"POST\",\n        url: URL + \"/signIn\",\n        data: payload,\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        }\n      });\n      const {\n        token\n      } = res.data;\n      localStorage.setItem(\"USER-TOKEN\", token);\n      dispatch(signInSuccess(token));\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        dispatch(signInFailure(error.response.data));\n      } else {\n        dispatch(signUpFailure(error));\n      }\n    }\n  };\n}; // sign out action creators\n\nexport const signOutRequest = () => {\n  return {\n    type: SIGN_OUT_REQUEST\n  };\n};\nexport const signOutSuccess = () => {\n  return {\n    type: SIGN_OUT_SUCCESS\n  };\n};\nexport const signOutFailure = () => {\n  return {\n    type: SIGN_OUT_FAILURE\n  };\n};\nexport const signOut = history => {\n  return function (dispatch) {\n    dispatch(signOutRequest());\n    localStorage.clear();\n\n    if (localStorage.getItem(\"USER-TOKEN\")) {\n      dispatch(signOutFailure());\n    } else {\n      dispatch(signOutSuccess());\n    }\n  };\n}; // fetch movies action creators\n\nconst fetchMoviesRequest = () => {\n  return {\n    type: FETCH_MOVIES_REQUEST,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchMoviesSuccess = movieData => {\n  return {\n    type: FETCH_MOVIES_SUCCESS,\n    payload: {\n      movieData\n    }\n  };\n};\n\nconst fetchMoviesFailure = error => {\n  return {\n    type: FETCH_MOVIES_FAILURE,\n    payload: error\n  };\n};\n\nexport const fetchMovie = payload => {\n  return async function (dispatch) {\n    dispatch(fetchMoviesRequest());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL + '/getallmovies',\n        data: payload\n      });\n      const result = res.data;\n      dispatch(fetchMoviesSuccess(result));\n    } catch (err) {\n      if (err.response && err.response.status === 401) {\n        dispatch(signOut());\n      }\n\n      ;\n      dispatch(fetchMoviesFailure(err));\n    }\n  };\n}; // fetch ONE movie action creators\n\nconst fetchOneMoviesRequest = () => {\n  return {\n    type: FETCH_ONE_MOVIE_REQUEST,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchOneMoviesSuccess = movieDataOne => {\n  return {\n    type: FETCH_ONE_MOVIE_SUCCESS,\n    payload: {\n      movieDataOne\n    }\n  };\n};\n\nconst fetchOneMoviesFailure = error => {\n  return {\n    type: FETCH_ONE_MOVIE_FAILURE,\n    payload: error\n  };\n};\n\nexport const fetchOneMovie = movieDataOne => {\n  return async function (dispatch) {\n    dispatch(fetchOneMoviesRequest());\n\n    try {\n      const res = await axios({\n        method: \"post\",\n        url: URL + '/getonemovie',\n        data: movieDataOne,\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const result = res.data;\n      dispatch(fetchOneMoviesSuccess(result));\n    } catch (err) {\n      if (err.response && err.response.status === 401) {\n        dispatch(signOut());\n      }\n\n      ;\n      dispatch(fetchOneMoviesFailure(err));\n    }\n  };\n}; // create Movie action\n\nconst createMovieRequest = () => {\n  return {\n    type: CREATE_MOVIES_REQUEST\n  };\n};\n\nconst createMovieSuccess = createMovieData => {\n  return {\n    type: CREATE_MOVIES_SUCCESS,\n    payload: {\n      createMovieData\n    }\n  };\n};\n\nconst createMovieFailure = error => {\n  return {\n    type: CREATE_MOVIES_FAILURE,\n    payload: error\n  };\n};\n\nexport const createMovie = createMovieData => {\n  return async function (dispatch) {\n    dispatch(createMovieRequest());\n\n    try {\n      const response = await axios({\n        method: \"post\",\n        url: URL + '/addmovie',\n        data: createMovieData,\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const data = response.data;\n      dispatch(fetchMovie());\n      dispatch(createMovieSuccess(data));\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        dispatch(signOut());\n      }\n\n      ;\n      dispatch(createMovieFailure(error));\n    }\n  };\n}; // Update Movie action\n\nconst updateMovieRequest = () => {\n  return {\n    type: UPDATE_MOVIES_REQUEST\n  };\n};\n\nconst updateMovieSuccess = deleteMovieData => {\n  return {\n    type: UPDATE_MOVIES_SUCCESS,\n    payload: {\n      deleteMovieData\n    }\n  };\n};\n\nconst updateMovieFailure = error => {\n  return {\n    type: UPDATE_MOVIES_FAILURE,\n    payload: error\n  };\n}; // export const updateMovie =  (updateMovieData) =>{\n//     return async function (dispatch) {\n//         dispatch(updateMovieRequest());\n//     try{\n//        const response = await axios({\n//             method:\"PUT\",\n//             url: URL+'/updatemovie',\n//             data: updateMovieData,\n//             headers:{\n//                 Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n//             }\n//         });\n//             const {data} = response;\n//             if(!data.success){\n//                  dispatch(updateMovieFailure(data.msg));\n//                  return false\n//             }\n//             dispatch(fetchMovie());   \n//             dispatch(updateMovieSuccess(data));\n//     }catch(error){\n//         if(error.response && error.response.status === 401){\n//             dispatch(signOut());\n//         };\n//         dispatch(updateMovieFailure(error));\n//     }\n//     };\n// };\n\n\nexport const updateMovie = async (updateMovieData, dispatch) => {\n  dispatch(updateMovieRequest());\n\n  try {\n    const response = await axios({\n      method: \"PUT\",\n      url: URL + '/updatemovie',\n      data: updateMovieData,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      }\n    });\n    const {\n      data\n    } = response;\n\n    if (!data.success) {\n      dispatch(updateMovieFailure(data.msg));\n      return false;\n    } else {\n      dispatch(fetchMovie());\n      dispatch(updateMovieSuccess(data));\n      return true;\n    }\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      dispatch(signOut());\n    }\n\n    ;\n    dispatch(updateMovieFailure(error));\n  }\n}; // Delete Movie action\n\nconst deleteMovieRequest = () => {\n  return {\n    type: DELETE_MOVIES_REQUEST\n  };\n};\n\nconst deleteMovieSuccess = deleteMovieData => {\n  return {\n    type: DELETE_MOVIES_SUCCESS,\n    payload: {\n      deleteMovieData\n    }\n  };\n};\n\nconst deleteMovieFailure = error => {\n  return {\n    type: DELETE_MOVIES_FAILURE,\n    payload: error\n  };\n};\n\nexport const deleteMovie = deleteMovieData => {\n  return async function (dispatch) {\n    dispatch(deleteMovieRequest());\n\n    try {\n      const response = await axios({\n        method: \"DELETE\",\n        url: URL + '/deletemovie',\n        data: deleteMovieData,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const {\n        data\n      } = response;\n      dispatch(fetchMovie());\n      toast.success(`Movie ${data.message}` + ` has been Deleted`);\n      dispatch(deleteMovieSuccess(data));\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        dispatch(signOut());\n      }\n\n      ;\n      dispatch(deleteMovieFailure(error));\n    }\n  };\n}; //Action Toggle Edit\n\nconst toggleEditSuccess = editData => {\n  return {\n    type: EDIT_ON,\n    payload: {\n      editData\n    }\n  };\n};\n\nexport const toggleEditTrue = () => {\n  return {\n    type: EDIT_ON\n  };\n};\nexport const toggleEdit = editData => {\n  return async function (dispatch) {\n    try {\n      dispatch(fetchOneMovie(editData));\n      dispatch(toggleEditSuccess());\n      dispatch(fetchMovie());\n    } catch (error) {}\n  };\n}; // Filter movie action creators\n\nconst filterMoviesRequest = () => {\n  return {\n    type: FILTER_MOVIE_REQUEST,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst filterMoviesSuccess = movieFilterData => {\n  return {\n    type: FILTER_MOVIE_SUCCESS,\n    payload: {\n      movieFilterData\n    }\n  };\n};\n\nconst filterMoviesFailure = error => {\n  return {\n    type: FILTER_MOVIE_FAILURE,\n    payload: error\n  };\n};\n\nexport const filterMovie = movieFilterData => {\n  return async function (dispatch) {\n    dispatch(filterMoviesRequest());\n\n    try {\n      const res = await axios({\n        method: \"post\",\n        url: URL + '/searchmovie',\n        data: movieFilterData,\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const result = res.data.data;\n      dispatch(filterMoviesSuccess(result));\n    } catch (err) {\n      if (err.response && err.response.status === 401) {\n        dispatch(signOut());\n      }\n\n      ;\n      dispatch(filterMoviesFailure(err));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/redux/action-creators.js"],"names":["axios","SIGN_IN_FAILURE","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_OUT_FAILURE","SIGN_OUT_REQUEST","SIGN_OUT_SUCCESS","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_FAILURE","FETCH_MOVIES_REQUEST","CREATE_MOVIES_SUCCESS","CREATE_MOVIES_FAILURE","CREATE_MOVIES_REQUEST","DELETE_MOVIES_SUCCESS","DELETE_MOVIES_FAILURE","DELETE_MOVIES_REQUEST","UPDATE_MOVIES_SUCCESS","UPDATE_MOVIES_FAILURE","UPDATE_MOVIES_REQUEST","FETCH_ONE_MOVIE_REQUEST","FETCH_ONE_MOVIE_SUCCESS","FETCH_ONE_MOVIE_FAILURE","FILTER_MOVIE_REQUEST","FILTER_MOVIE_SUCCESS","FILTER_MOVIE_FAILURE","EDIT_ON","toast","URL","signUpRequest","type","signUpSuccess","user","payload","signUpFailure","error","signUp","history","dispatch","res","method","url","data","push","response","status","signInRequest","signInSuccess","token","signInFailure","signIn","headers","localStorage","setItem","signOutRequest","signOutSuccess","signOutFailure","signOut","clear","getItem","fetchMoviesRequest","loading","fetchMoviesSuccess","movieData","fetchMoviesFailure","fetchMovie","result","err","fetchOneMoviesRequest","fetchOneMoviesSuccess","movieDataOne","fetchOneMoviesFailure","fetchOneMovie","Authorization","createMovieRequest","createMovieSuccess","createMovieData","createMovieFailure","createMovie","updateMovieRequest","updateMovieSuccess","deleteMovieData","updateMovieFailure","updateMovie","updateMovieData","success","msg","deleteMovieRequest","deleteMovieSuccess","deleteMovieFailure","deleteMovie","message","toggleEditSuccess","editData","toggleEditTrue","toggleEdit","filterMoviesRequest","filterMoviesSuccess","movieFilterData","filterMoviesFailure","filterMovie"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n    SIGN_IN_FAILURE,\n    SIGN_IN_REQUEST,\n    SIGN_IN_SUCCESS,\n    SIGN_UP_FAILURE,\n    SIGN_UP_REQUEST,\n    SIGN_UP_SUCCESS,\n    SIGN_OUT_FAILURE,\n    SIGN_OUT_REQUEST,\n    SIGN_OUT_SUCCESS,\n\n    FETCH_MOVIES_SUCCESS,\n    FETCH_MOVIES_FAILURE,\n    FETCH_MOVIES_REQUEST,\n\n    CREATE_MOVIES_SUCCESS,\n    CREATE_MOVIES_FAILURE,\n    CREATE_MOVIES_REQUEST,\n\n    DELETE_MOVIES_SUCCESS,\n    DELETE_MOVIES_FAILURE,\n    DELETE_MOVIES_REQUEST,\n\n    UPDATE_MOVIES_SUCCESS,\n    UPDATE_MOVIES_FAILURE,\n    UPDATE_MOVIES_REQUEST,\n\n    FETCH_ONE_MOVIE_REQUEST,\n    FETCH_ONE_MOVIE_SUCCESS,\n    FETCH_ONE_MOVIE_FAILURE,\n\n    FILTER_MOVIE_REQUEST,\n    FILTER_MOVIE_SUCCESS,\n    FILTER_MOVIE_FAILURE,\n\n    EDIT_ON\n\n\n} from './action-types';\nimport {toast} from \"react-toastify\";\n\nimport { URL } from \"../components/URL\";\n\n// Sign up action creators\n\nconst signUpRequest = () =>{\n    return{\n        type: SIGN_UP_REQUEST,\n    };\n};\n\nconst signUpSuccess = (user) =>{\n    return{\n        type: SIGN_UP_SUCCESS,\n        payload: {\n            user\n        }\n    };\n};\n\nconst signUpFailure = (error) =>{\n    return {\n        type: SIGN_UP_FAILURE,\n        payload:error\n    };\n};\nexport const signUp = (user,history) =>{\n    \n    return async function (dispatch)  {\n        dispatch(signUpRequest());\n        try{\n            const res = await axios({\n                method:\"post\",\n                url: URL+'/signUp',\n                data: user,\n                });\n                const {data} = res.data;\n               \n                dispatch(signUpSuccess(data));\n                history.push('/');\n        }catch(error){\n            if(error.response && error.response.status === 400){\n                \n                dispatch(signUpFailure(error.response.data));\n           }else{\n               dispatch(signUpFailure(error));\n           }\n        }\n    };\n};\n\n\n\n//Sign in action creators\n\nconst signInRequest = () =>{\n    return {\n        type: SIGN_IN_REQUEST\n    };\n};\n\nconst signInSuccess = (token) =>{\n    return {\n        type: SIGN_IN_SUCCESS,\n        payload:{\n            token\n        }\n    };\n};\n\nconst signInFailure = (error) =>{\n \n    return {\n        type: SIGN_IN_FAILURE,\n        payload: error,\n    };\n};\n\nexport const signIn = (payload,history) =>{\n\n    return async function (dispatch) {\n    \n        dispatch(signInRequest);\n        try{\n    \n           const res= await axios({\n                method:\"POST\",\n                url: URL+\"/signIn\",\n                data:payload,\n                headers:{\n                    \"Content-type\":\"application/json\",\n                    \"Accept\":\"application/json\",\n                }\n            })           \n               \n            const {token} = res.data;\n              \n                localStorage.setItem(\"USER-TOKEN\",token);\n                dispatch(signInSuccess(token));\n        }catch(error){\n            if(error.response && error.response.status === 404){\n                dispatch(signInFailure(error.response.data));\n            \n           }\n           else{\n               dispatch(signUpFailure(error));\n           }\n           \n           \n        }\n        \n    };\n};\n\n\n// sign out action creators\n\nexport const signOutRequest = () =>{\n    return {\n        type: SIGN_OUT_REQUEST,\n    };\n};\n\nexport const signOutSuccess = () =>{\n    return {\n      type: SIGN_OUT_SUCCESS,\n    };\n  };\n\nexport const signOutFailure = () =>{\n    return {\n        type: SIGN_OUT_FAILURE\n    };\n};\n\nexport const signOut = (history) =>{\n    return function(dispatch){\n        dispatch(signOutRequest());\n        localStorage.clear();\n        if(localStorage.getItem(\"USER-TOKEN\")){\n            dispatch(signOutFailure());\n        }\n        else{\n            dispatch(signOutSuccess());\n        }\n    };\n}\n\n\n// fetch movies action creators\n\nconst fetchMoviesRequest = () =>{\n    return{\n        type: FETCH_MOVIES_REQUEST,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchMoviesSuccess = (movieData) =>{\n    \n    return{\n        type: FETCH_MOVIES_SUCCESS,\n        payload: {\n            movieData\n        }\n    };\n};\n\nconst fetchMoviesFailure = (error) =>{\n    return {\n        type: FETCH_MOVIES_FAILURE,\n        payload:error\n    };\n};\n\nexport const fetchMovie = (payload) =>{\n    \n    return async function (dispatch) {\n        dispatch(fetchMoviesRequest());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL+'/getallmovies',\n                    data: payload,\n                });\n                const result = res.data;\n              \n                dispatch(fetchMoviesSuccess(result));\n        }catch(err){\n            if(err.response && err.response.status === 401){\n                dispatch(signOut());\n            };\n                dispatch(fetchMoviesFailure(err));\n        }\n    };\n};\n\n// fetch ONE movie action creators\n\nconst fetchOneMoviesRequest = () =>{\n    return{\n        type: FETCH_ONE_MOVIE_REQUEST,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchOneMoviesSuccess = (movieDataOne) =>{\n    \n    return{\n        type: FETCH_ONE_MOVIE_SUCCESS,\n        payload: \n            {movieDataOne}\n        \n    };\n};\n\nconst fetchOneMoviesFailure = (error) =>{\n    return {\n        type: FETCH_ONE_MOVIE_FAILURE,\n        payload:error\n    };\n};\n\nexport const fetchOneMovie = (movieDataOne) =>{\n   \n    return async function (dispatch) {\n        dispatch(fetchOneMoviesRequest());\n        try{\n            const res = await axios({\n                    method:\"post\",\n                    url: URL+'/getonemovie',\n                    data: movieDataOne,\n                    headers:{\n                        \"Content-type\":\"application/json\",\n                        \"Accept\":\"application/json\",\n                        Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n                    }\n                });\n                \n                const result = res.data;\n                dispatch(fetchOneMoviesSuccess(result));\n              \n                \n        }catch(err){\n            if(err.response && err.response.status === 401){\n                dispatch(signOut());\n            };\n                dispatch(fetchOneMoviesFailure(err));\n        }\n    };\n};\n\n// create Movie action\n\nconst createMovieRequest = () =>{\n    return{\n        type: CREATE_MOVIES_REQUEST,\n    };\n};\n\nconst createMovieSuccess = (createMovieData) =>{\n    return{\n        type: CREATE_MOVIES_SUCCESS,\n        payload: {\n            createMovieData\n        }\n    };\n};\n\nconst createMovieFailure = (error) =>{\n   \n    return {\n        type: CREATE_MOVIES_FAILURE,\n        payload:error\n    };\n};\n\nexport const createMovie =  (createMovieData) =>{\n    return async function (dispatch) {\n  \n        dispatch(createMovieRequest());\n    try{\n       const response = await axios({\n            method:\"post\",\n            url: URL+'/addmovie',\n            data: createMovieData,\n            headers:{\n                \"Content-type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        });\n        const data = response.data;\n        dispatch(fetchMovie()); \n            \n        dispatch(createMovieSuccess(data));\n         \n           \n          \n    }catch(error){\n        if(error.response && error.response.status === 401){\n            dispatch(signOut());\n        };\n        dispatch(createMovieFailure(error));\n    }\n     \n    };\n};\n\n\n// Update Movie action\n\nconst updateMovieRequest = () =>{\n    return{\n        type: UPDATE_MOVIES_REQUEST,\n    };\n};\n\nconst updateMovieSuccess = (deleteMovieData) =>{\n    return{\n        type: UPDATE_MOVIES_SUCCESS,\n        payload: {\n            deleteMovieData\n        }\n    };\n};\n\nconst updateMovieFailure = (error) =>{\n  \n    return {\n        type: UPDATE_MOVIES_FAILURE,\n        payload:error\n    };\n};\n\n// export const updateMovie =  (updateMovieData) =>{\n//     return async function (dispatch) {\n//         dispatch(updateMovieRequest());\n//     try{\n//        const response = await axios({\n//             method:\"PUT\",\n//             url: URL+'/updatemovie',\n//             data: updateMovieData,\n//             headers:{\n//                 Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n//             }\n//         });\n        \n//             const {data} = response;\n//             if(!data.success){\n            \n//                  dispatch(updateMovieFailure(data.msg));\n//                  return false\n//             }\n           \n//             dispatch(fetchMovie());   \n//             dispatch(updateMovieSuccess(data));\n//     }catch(error){\n//         if(error.response && error.response.status === 401){\n//             dispatch(signOut());\n//         };\n//         dispatch(updateMovieFailure(error));\n//     }\n     \n//     };\n// };\n\nexport const updateMovie =  async (updateMovieData,dispatch) =>{\n\n        dispatch(updateMovieRequest());\n    try{\n       const response = await axios({\n            method:\"PUT\",\n            url: URL+'/updatemovie',\n            data: updateMovieData,\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        });\n        \n            const {data} = response;\n            if(!data.success){\n                \n                 dispatch(updateMovieFailure(data.msg));\n\n                 return false\n            }\n            else{\n                dispatch(fetchMovie());   \n                dispatch(updateMovieSuccess(data));\n                return true\n            }\n           \n          \n    }catch(error){\n        if(error.response && error.response.status === 401){\n            dispatch(signOut());\n        };\n       \n        dispatch(updateMovieFailure(error));\n    }\n     \n    \n};\n\n// Delete Movie action\n\nconst deleteMovieRequest = () =>{\n    return{\n        type: DELETE_MOVIES_REQUEST,\n    };\n};\n\nconst deleteMovieSuccess = (deleteMovieData) =>{\n    return{\n        type: DELETE_MOVIES_SUCCESS,\n        payload: {\n            deleteMovieData\n        }\n    };\n};\n\nconst deleteMovieFailure = (error) =>{\n    return {\n        type: DELETE_MOVIES_FAILURE,\n        payload:error\n    };\n};\n\nexport const deleteMovie =  (deleteMovieData) =>{\n    return async function (dispatch) {\n        dispatch(deleteMovieRequest());\n    try{\n       const response = await axios({\n            method:\"DELETE\",\n            url: URL+'/deletemovie',\n            data: deleteMovieData,\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        });\n        \n            const {data} = response;\n            dispatch(fetchMovie()); \n            \n            toast.success(`Movie ${data.message}`+` has been Deleted`);\n            dispatch(deleteMovieSuccess(data));\n    }catch(error){\n        if(error.response && error.response.status === 401){\n            dispatch(signOut());\n        };\n       \n        dispatch(deleteMovieFailure(error));\n    }\n     \n    };\n};\n\n//Action Toggle Edit\nconst toggleEditSuccess = (editData) =>{\n    return{\n        type: EDIT_ON,\n        payload: {\n            editData\n        }\n    };\n};\nexport const toggleEditTrue = () =>{\n    return{\n        type: EDIT_ON,\n      \n    };\n};\n\n\nexport const toggleEdit = (editData) =>{\n          \n           \n    return async function(dispatch){\n        try{\n        dispatch(fetchOneMovie(editData));\n         dispatch(toggleEditSuccess())\n         dispatch(fetchMovie());\n        }\n        catch(error){\n\n        }\n    }\n};\n\n// Filter movie action creators\n\nconst filterMoviesRequest = () =>{\n    return{\n        type: FILTER_MOVIE_REQUEST,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst filterMoviesSuccess = (movieFilterData) =>{\n    \n    return{\n        type: FILTER_MOVIE_SUCCESS,\n        payload: \n            {movieFilterData}\n        \n    };\n};\n\nconst filterMoviesFailure = (error) =>{\n    return {\n        type: FILTER_MOVIE_FAILURE,\n        payload:error\n    };\n};\n\nexport const filterMovie = (movieFilterData) =>{\n   \n    return async function (dispatch) {\n        dispatch(filterMoviesRequest());\n        try{\n            const res = await axios({\n                    method:\"post\",\n                    url: URL+'/searchmovie',\n                    data: movieFilterData,\n                    headers:{\n                        \"Content-type\":\"application/json\",\n                        \"Accept\":\"application/json\",\n                        Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n                    }\n                });\n                \n                const result = res.data.data;\n                  \n              \n                dispatch(filterMoviesSuccess(result));\n        }catch(err){\n            if(err.response && err.response.status === 401){\n            dispatch(signOut());\n        };\n                dispatch(filterMoviesFailure(err));\n        }\n    };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}