{"ast":null,"code":"var _jsxFileName = \"/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/App.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './App.css';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Routes from './components/Routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default _c2 = withRouter(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/App.js"],"names":["React","withRouter","ToastContainer","Routes","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAO,WAAP;AACA,SAAQC,cAAR,QAA6B,gBAA7B;AACA,OAAO,uCAAP;AAEA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAPQA,G;AAST,qBAAeH,UAAU,CAACG,GAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport './App.css';\nimport {ToastContainer} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Routes from './components/Routes';\n\nfunction App() {\n  return (\n    <div>\n    <Routes/>\n    <ToastContainer />\n    </div>\n  );\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}