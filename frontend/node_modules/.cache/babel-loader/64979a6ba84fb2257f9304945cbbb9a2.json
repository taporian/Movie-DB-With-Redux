{"ast":null,"code":"import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport { authenticationReducer, fetchMoviesReducer, createMoviesReducer, deleteMoviesReducer, toggleEditreducer, fetchOneMoviesReducer, filterMoviesReducer, updateMoviesReducer } from \"./reducer\";\n\nconst createRootReducer = () => combineReducers({\n  authenticationReducer,\n  fetchMoviesReducer,\n  createMoviesReducer,\n  deleteMoviesReducer,\n  toggleEditreducer,\n  updateMoviesReducer,\n  fetchOneMoviesReducer,\n  filterMoviesReducer\n});\n\nconst initState = {\n  authenticationReducer: {\n    currentUser: null,\n    token: \"\",\n    error: \"\",\n    loading: false,\n    isAuthenticated: false\n  },\n  fetchMoviesReducer: {\n    error: \"\",\n    loading: false,\n    movieData: []\n  },\n  createMoviesReducer: {\n    error: \"\",\n    loading: false,\n    createMovieData: []\n  },\n  deleteMoviesReducer: {\n    error: \"\",\n    loading: false,\n    deleteMovieData: []\n  },\n  updateMoviesReducer: {\n    error: \"\",\n    loading: false,\n    updateMovieData: []\n  },\n  fetchOneMoviesReducer: {\n    error: \"\",\n    loading: false,\n    movieDataOne: []\n  },\n  filterMoviesReducer: {\n    error: \"\",\n    loading: false,\n    movieDataOne: []\n  }\n};\nexport default function makeStore(initialState = initState) {\n  let composeEnhancers = compose;\n  const middlewares = [thunk];\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n    }\n  }\n\n  const store = createStore(createRootReducer(), initialState, composeEnhancers(applyMiddleware(...middlewares)));\n\n  if (module.hot) {\n    module.hot.accept(\"./reducer\", () => {\n      const nextReducer = require(\"./reducer\").default;\n\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/redux/store.js"],"names":["applyMiddleware","createStore","compose","thunk","combineReducers","authenticationReducer","fetchMoviesReducer","createMoviesReducer","deleteMoviesReducer","toggleEditreducer","fetchOneMoviesReducer","filterMoviesReducer","updateMoviesReducer","createRootReducer","initState","currentUser","token","error","loading","isAuthenticated","movieData","createMovieData","deleteMovieData","updateMovieData","movieDataOne","makeStore","initialState","composeEnhancers","middlewares","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","module","hot","accept","nextReducer","require","default","replaceReducer"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,SAAQC,qBAAR,EACEC,kBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,iBAJF,EAKEC,qBALF,EAMEC,mBANF,EAOEC,mBAPF,QAO4B,WAP5B;;AASA,MAAMC,iBAAiB,GAAG,MACxBT,eAAe,CAAC;AACdC,EAAAA,qBADc;AAEdC,EAAAA,kBAFc;AAGdC,EAAAA,mBAHc;AAIdC,EAAAA,mBAJc;AAKdC,EAAAA,iBALc;AAMdG,EAAAA,mBANc;AAOdF,EAAAA,qBAPc;AAQdC,EAAAA;AARc,CAAD,CADjB;;AAaA,MAAMG,SAAS,GAAG;AAChBT,EAAAA,qBAAqB,EAAE;AACrBU,IAAAA,WAAW,EAAE,IADQ;AAErBC,IAAAA,KAAK,EAAE,EAFc;AAGrBC,IAAAA,KAAK,EAAE,EAHc;AAIrBC,IAAAA,OAAO,EAAE,KAJY;AAKrBC,IAAAA,eAAe,EAAE;AALI,GADP;AAShBb,EAAAA,kBAAkB,EAAC;AACjBW,IAAAA,KAAK,EAAC,EADW;AAEjBC,IAAAA,OAAO,EAAE,KAFQ;AAGjBE,IAAAA,SAAS,EAAC;AAHO,GATH;AAehBb,EAAAA,mBAAmB,EAAC;AAClBU,IAAAA,KAAK,EAAC,EADY;AAElBC,IAAAA,OAAO,EAAE,KAFS;AAGlBG,IAAAA,eAAe,EAAC;AAHE,GAfJ;AAqBhBb,EAAAA,mBAAmB,EAAC;AAClBS,IAAAA,KAAK,EAAC,EADY;AAElBC,IAAAA,OAAO,EAAE,KAFS;AAGlBI,IAAAA,eAAe,EAAC;AAHE,GArBJ;AA0BhBV,EAAAA,mBAAmB,EAAC;AAClBK,IAAAA,KAAK,EAAC,EADY;AAElBC,IAAAA,OAAO,EAAE,KAFS;AAGlBK,IAAAA,eAAe,EAAC;AAHE,GA1BJ;AA+BhBb,EAAAA,qBAAqB,EAAC;AACpBO,IAAAA,KAAK,EAAC,EADc;AAEpBC,IAAAA,OAAO,EAAE,KAFW;AAGpBM,IAAAA,YAAY,EAAC;AAHO,GA/BN;AAoChBb,EAAAA,mBAAmB,EAAC;AAClBM,IAAAA,KAAK,EAAC,EADY;AAElBC,IAAAA,OAAO,EAAE,KAFS;AAGlBM,IAAAA,YAAY,EAAC;AAHK;AApCJ,CAAlB;AA6CA,eAAe,SAASC,SAAT,CAAmBC,YAAY,GAAGZ,SAAlC,EAA6C;AAC1D,MAAIa,gBAAgB,GAAGzB,OAAvB;AACA,QAAM0B,WAAW,GAAG,CAACzB,KAAD,CAApB;;AAEA,MAAI0B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,QAAIC,MAAM,CAACC,oCAAX,EAAiD;AAC/CN,MAAAA,gBAAgB,GAAGK,MAAM,CAACC,oCAA1B;AACD;AACF;;AACD,QAAMC,KAAK,GAAGjC,WAAW,CACvBY,iBAAiB,EADM,EAEvBa,YAFuB,EAGvBC,gBAAgB,CAAC3B,eAAe,CAAC,GAAG4B,WAAJ,CAAhB,CAHO,CAAzB;;AAMA,MAAIO,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,WAAlB,EAA+B,MAAM;AACnC,YAAMC,WAAW,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,OAAzC;;AACAN,MAAAA,KAAK,CAACO,cAAN,CAAqBH,WAArB;AACD,KAHD;AAID;;AACD,SAAOJ,KAAP;AACD","sourcesContent":["import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\n\nimport {authenticationReducer, \n  fetchMoviesReducer,\n  createMoviesReducer, \n  deleteMoviesReducer,\n  toggleEditreducer ,\n  fetchOneMoviesReducer,\n  filterMoviesReducer,\n  updateMoviesReducer} from \"./reducer\";\n\nconst createRootReducer = () =>\n  combineReducers({\n    authenticationReducer,\n    fetchMoviesReducer,\n    createMoviesReducer,\n    deleteMoviesReducer,\n    toggleEditreducer,\n    updateMoviesReducer,\n    fetchOneMoviesReducer,\n    filterMoviesReducer\n\n  });\n\nconst initState = {\n  authenticationReducer: {\n    currentUser: null,\n    token: \"\",\n    error: \"\",\n    loading: false,\n    isAuthenticated: false,\n   \n  },\n  fetchMoviesReducer:{\n    error:\"\",\n    loading: false,\n    movieData:[],\n  \n  },\n  createMoviesReducer:{\n    error:\"\",\n    loading: false,\n    createMovieData:[],\n   \n  },\n  deleteMoviesReducer:{\n    error:\"\",\n    loading: false,\n    deleteMovieData:[],\n  },\n  updateMoviesReducer:{\n    error:\"\",\n    loading: false,\n    updateMovieData:[],\n  },\n  fetchOneMoviesReducer:{\n    error:\"\",\n    loading: false,\n    movieDataOne:[],\n  },\n  filterMoviesReducer:{\n    error:\"\",\n    loading: false,\n    movieDataOne:[],\n  }\n\n\n}\n\nexport default function makeStore(initialState = initState) {\n  let composeEnhancers = compose;\n  const middlewares = [thunk];\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n    }\n  }\n  const store = createStore(\n    createRootReducer(),\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n\n  if (module.hot) {\n    module.hot.accept(\"./reducer\", () => {\n      const nextReducer = require(\"./reducer\").default;\n      store.replaceReducer(nextReducer);\n    });\n  }\n  return store;\n}"]},"metadata":{},"sourceType":"module"}