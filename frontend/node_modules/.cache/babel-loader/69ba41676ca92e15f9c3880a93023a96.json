{"ast":null,"code":"var _jsxFileName = \"/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NavBar from \"../components/Navbar\";\nimport { fetchMovie } from '../redux/action-creators';\nimport CreateMovie from \"./CreateMovie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    movieData,\n    loading,\n    error\n  } = useSelector(state => state.fetchMoviesReducer);\n  useEffect(() => {\n    dispatch(fetchMovie());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CreateMovie, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }, this), console.log(\"movie data\", movieData), \"HOME hh\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: movieData && movieData.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"title \", post.title]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"8xoPW1xEa3QdGuji28h2dLiiMOA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/pages/Home.js"],"names":["React","useEffect","useDispatch","useSelector","NavBar","fetchMovie","CreateMovie","Home","dispatch","movieData","loading","error","state","fetchMoviesReducer","console","log","map","post","title","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAO;AAAEO,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAgCR,WAAW,CAAES,KAAD,IAAYA,KAAK,CAACC,kBAAnB,CAAlD;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AAEfO,IAAAA,QAAQ,CAAEH,UAAU,EAAZ,CAAR;AAEF,GAJU,EAIR,CAACG,QAAD,CAJQ,CAAT;AAMA,sBAEE;AAAA,4BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADD,EAEEM,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBN,SAAzB,CAFF,0BAIE;AAAA,iBACGC,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADd,EAEGC,KAAK,iBAAI;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,cAFZ,eAGA;AAAA,kBAEIF,SAAS,IAAIA,SAAS,CAACO,GAAV,CAAcC,IAAI,iBAC7B;AAAA,+BAA2BA,IAAI,CAACC,KAAhC;AAAA,WAASD,IAAI,CAACE,GAAd;AAAA;AAAA;AAAA;AAAA,gBADW;AAFjB;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAkBD,CA/BD;;GAAMZ,I;UAEaL,W,EAEsBC,W;;;KAJnCI,I;AAgCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect} from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NavBar from \"../components/Navbar\";\nimport {fetchMovie} from '../redux/action-creators'\nimport CreateMovie from \"./CreateMovie\";\n\nconst Home = () => {\n\n  const dispatch = useDispatch();\n \n  const  { movieData, loading, error } = useSelector((state) =>  state.fetchMoviesReducer);\n  \n \n  useEffect(() => {\n   \n   dispatch( fetchMovie());\n   \n}, [dispatch]);\n\n  return (\n    \n    <div>\n     <CreateMovie/>\n     {console.log(\"movie data\",movieData)}\n      HOME hh\n      <div>\n        {loading && <div>LOADING...</div>}\n        {error && <div>{error}</div>}\n      <ul>\n          {\n          movieData && movieData.map(post => (\n            <li key={post._id} >title {post.title}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\nexport default Home"]},"metadata":{},"sourceType":"module"}