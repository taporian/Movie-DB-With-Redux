{"ast":null,"code":"import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport authentication from \"./reducer\";\n\nconst createRootReducer = () => combineReducers({\n  authentication\n});\n\nconst initState = {\n  authentication: {\n    currentUser: null,\n    token: \"\",\n    error: \"\",\n    loading: false,\n    isAuthenticated: false,\n    data: \"\"\n  }\n};\nexport default function makeStore(initialState = initState) {\n  let composeEnhancers = compose;\n  const middlewares = [thunk];\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n    }\n  }\n\n  const store = createStore(createRootReducer(), initialState, composeEnhancers(applyMiddleware(...middlewares)));\n\n  if (module.hot) {\n    module.hot.accept(\"./reducer\", () => {\n      const nextReducer = require(\"./reducer\").default;\n\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/redux/store.js"],"names":["applyMiddleware","createStore","compose","thunk","combineReducers","authentication","createRootReducer","initState","currentUser","token","error","loading","isAuthenticated","data","makeStore","initialState","composeEnhancers","middlewares","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","module","hot","accept","nextReducer","require","default","replaceReducer"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAOC,cAAP,MAA2B,WAA3B;;AAEA,MAAMC,iBAAiB,GAAG,MACxBF,eAAe,CAAC;AACdC,EAAAA;AADc,CAAD,CADjB;;AAKA,MAAME,SAAS,GAAG;AAChBF,EAAAA,cAAc,EAAE;AACdG,IAAAA,WAAW,EAAE,IADC;AAEdC,IAAAA,KAAK,EAAE,EAFO;AAGdC,IAAAA,KAAK,EAAE,EAHO;AAIdC,IAAAA,OAAO,EAAE,KAJK;AAKdC,IAAAA,eAAe,EAAE,KALH;AAMdC,IAAAA,IAAI,EAAC;AANS;AADA,CAAlB;AAWA,eAAe,SAASC,SAAT,CAAmBC,YAAY,GAAGR,SAAlC,EAA6C;AAC1D,MAAIS,gBAAgB,GAAGd,OAAvB;AACA,QAAMe,WAAW,GAAG,CAACd,KAAD,CAApB;;AAEA,MAAIe,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,QAAIC,MAAM,CAACC,oCAAX,EAAiD;AAC/CN,MAAAA,gBAAgB,GAAGK,MAAM,CAACC,oCAA1B;AACD;AACF;;AACD,QAAMC,KAAK,GAAGtB,WAAW,CACvBK,iBAAiB,EADM,EAEvBS,YAFuB,EAGvBC,gBAAgB,CAAChB,eAAe,CAAC,GAAGiB,WAAJ,CAAhB,CAHO,CAAzB;;AAMA,MAAIO,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,WAAlB,EAA+B,MAAM;AACnC,YAAMC,WAAW,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,OAAzC;;AACAN,MAAAA,KAAK,CAACO,cAAN,CAAqBH,WAArB;AACD,KAHD;AAID;;AACD,SAAOJ,KAAP;AACD","sourcesContent":["import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\n\nimport authentication from \"./reducer\";\n\nconst createRootReducer = () =>\n  combineReducers({\n    authentication,\n  });\n\nconst initState = {\n  authentication: {\n    currentUser: null,\n    token: \"\",\n    error: \"\",\n    loading: false,\n    isAuthenticated: false,\n    data:\"\",\n  },\n}\n\nexport default function makeStore(initialState = initState) {\n  let composeEnhancers = compose;\n  const middlewares = [thunk];\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n    }\n  }\n  const store = createStore(\n    createRootReducer(),\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n\n  if (module.hot) {\n    module.hot.accept(\"./reducer\", () => {\n      const nextReducer = require(\"./reducer\").default;\n      store.replaceReducer(nextReducer);\n    });\n  }\n  return store;\n}"]},"metadata":{},"sourceType":"module"}