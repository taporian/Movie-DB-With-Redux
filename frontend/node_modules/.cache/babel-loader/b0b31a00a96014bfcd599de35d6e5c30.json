{"ast":null,"code":"var _jsxFileName = \"/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/components/UpdateMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { StyledButton } from \"../components/styled/Button.style\";\nimport { Table } from \"../components/Table\";\nimport { Input } from \"./styled/Input.style\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport { toggleEditTrue, updateMovie2 } from '../redux/action-creators';\nimport { ErrorPForm } from './styled/Form.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateMovies = ({\n  movieDataOne,\n  error\n}) => {\n  _s();\n\n  var _errors$title, _errors$year, _errors$rating, _errors$description;\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const schema = yup.object().shape({\n    id: yup.string(),\n    title: yup.string().required(),\n    year: yup.number().min(1000).max(9999).typeError(\"Must be a number\"),\n    rating: yup.number().min(1).max(10).typeError(\"Must be a number\"),\n    description: yup.string()\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    setValue,\n    reset\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: movieDataOne\n  });\n\n  const onSubmit = async d => {\n    console.log(\"d UPDATE\", d); //  dispatch();\n    // dispatch(fetchOneMovie({id:d.id}));\n    // dispatch(fetchMovie());\n\n    console.log(\"EL KHARA\", await updateMovie2(d, dispatch));\n\n    if (await updateMovie2(d, dispatch)) {\n      dispatch(toggleEditTrue());\n    }\n  };\n\n  useEffect(() => {\n    reset(movieDataOne);\n  }, [movieDataOne]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(Table.Head, {\n        children: /*#__PURE__*/_jsxDEV(Table.TR, {\n          children: [/*#__PURE__*/_jsxDEV(Table.TH, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: \"UPDATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), movieDataOne && movieDataOne._id && movieDataOne.title && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: /*#__PURE__*/_jsxDEV(Table.Body, {\n          children: /*#__PURE__*/_jsxDEV(Table.TR, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"hidden\",\n              ...register(\"id\"),\n              defaultValue: movieDataOne._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Input, { ...register(\"title\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this), \"  \", error && /*#__PURE__*/_jsxDEV(ErrorPForm, {\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorPForm, {\n                children: (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Input, { ...register(\"year\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(ErrorPForm, {\n                children: (_errors$year = errors.year) === null || _errors$year === void 0 ? void 0 : _errors$year.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n              children: [\"  \", /*#__PURE__*/_jsxDEV(Input, { ...register(\"rating\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(ErrorPForm, {\n                children: (_errors$rating = errors.rating) === null || _errors$rating === void 0 ? void 0 : _errors$rating.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Input, { ...register(\"description\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(ErrorPForm, {\n                children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(StyledButton, {\n                type: \"submit\",\n                buttonLabel: \"\\u2713\",\n                backgroundColor: \"#01bf41\",\n                backgroundColorOnHover: \"green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(StyledButton, {\n                buttonLabel: \"X\",\n                backgroundColor: \"#e50d0d\",\n                onClick: () => history.go(0),\n                children: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 10\n            }, this)]\n          }, movieDataOne._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateMovies, \"KM/kDZ4hWEfiI3kU9Ogey4RIAdg=\", false, function () {\n  return [useDispatch, useHistory, useForm];\n});\n\n_c = UpdateMovies;\nexport default UpdateMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateMovies\");","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/components/UpdateMovie.js"],"names":["React","useEffect","StyledButton","Table","Input","useForm","useHistory","yupResolver","yup","useDispatch","toggleEditTrue","updateMovie2","ErrorPForm","UpdateMovies","movieDataOne","error","dispatch","history","schema","object","shape","id","string","title","required","year","number","min","max","typeError","rating","description","register","handleSubmit","formState","errors","setValue","reset","resolver","defaultValues","onSubmit","d","console","log","_id","message","go"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\nimport { StyledButton}  from \"../components/styled/Button.style\";\nimport { Table } from \"../components/Table\";\nimport { Input } from \"./styled/Input.style\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport {toggleEditTrue,updateMovie2} from '../redux/action-creators';\nimport {ErrorPForm} from './styled/Form.style';\n\n\n  const UpdateMovies = ({movieDataOne,error}) =>{\n\n    \n    \n    const dispatch = useDispatch();\n    const history = useHistory();\n    const schema = yup.object().shape({\n        id: yup.string(),\n        title: yup.string().required(),\n        year: yup.number().min(1000).max(9999).typeError(\"Must be a number\"),\n        rating: yup.number().min(1).max(10).typeError(\"Must be a number\"),\n        description: yup.string(),\n      })\n    \n      const {\n        register,\n        handleSubmit,\n        formState: { errors },\n        setValue,\n        reset,\n      } = useForm({ resolver: yupResolver(schema),\n        defaultValues:  movieDataOne\n      });\n    \n      const onSubmit = async (d) =>{\n        console.log(\"d UPDATE\",d);\n        //  dispatch();\n\n            // dispatch(fetchOneMovie({id:d.id}));\n            // dispatch(fetchMovie());\n            console.log(\"EL KHARA\",await updateMovie2(d,dispatch))\n           if(await updateMovie2(d,dispatch)){\n            dispatch(toggleEditTrue());\n         }\n       \n      }\n      useEffect(() => {\n       \n        reset(movieDataOne);\n      }, [movieDataOne]);\n\n\n\nreturn (\n    <div>\n   <Table>\n    <Table.Head>\n    <Table.TR>\n <Table.TH>Title</Table.TH>\n <Table.TH>Year</Table.TH>\n <Table.TH>Rating</Table.TH>\n <Table.TH>Description</Table.TH>\n <Table.TH>UPDATE</Table.TH>\n <Table.TH>Cancel</Table.TH>\n\n</Table.TR>\n</Table.Head>\n</Table>\n   {movieDataOne && movieDataOne._id && movieDataOne.title && \n       <form onSubmit={handleSubmit(onSubmit)}>       \n         <Table>\n  <Table.Body>\n    <Table.TR key={movieDataOne._id}>\n    <Input type=\"hidden\" {...register(\"id\")} \n    defaultValue={movieDataOne._id}\n    />\n       \n  <Table.TH > <Input   {...register(\"title\")} \n  // defaultValue={movieDataOne.title}\n  />  {error && <ErrorPForm>{error}</ErrorPForm> }\n  <ErrorPForm>{errors.title?.message}</ErrorPForm></Table.TH>\n\n  <Table.TH > <Input   {...register(\"year\")} \n  // defaultValue={movieDataOne.year}\n  />\n  <ErrorPForm>{errors.year?.message}</ErrorPForm></Table.TH>\n \n  <Table.TH >  <Input  {...register(\"rating\")} \n  //  defaultValue={movieDataOne.rating}\n   />\n  <ErrorPForm>{errors.rating?.message}</ErrorPForm></Table.TH>\n \n  <Table.TH > <Input   {...register(\"description\")} \n  // defaultValue={movieDataOne.description}\n  />\n  <ErrorPForm>{errors.description?.message}</ErrorPForm></Table.TH>\n  \n <Table.TH > <StyledButton type='submit' buttonLabel=\"✓\"  backgroundColor=\"#01bf41\"  backgroundColorOnHover=\"green\"   \n         ></StyledButton></Table.TH>    \n         <Table.TH> <StyledButton buttonLabel=\"X\"  backgroundColor=\"#e50d0d\" \n              onClick={() => history.go(0) }>{\"\"}\n                </StyledButton> \n                </Table.TH> \n            </Table.TR> \n            \n            </Table.Body>           \n              </Table>              \n              </form>\n}\n</div>\n\n)\n\n}\n\n\nexport default UpdateMovies"]},"metadata":{},"sourceType":"module"}