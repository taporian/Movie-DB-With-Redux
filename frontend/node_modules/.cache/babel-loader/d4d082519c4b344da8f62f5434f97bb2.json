{"ast":null,"code":"var _jsxFileName = \"/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/pages/EditMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchMovie, deleteMovie, toggleEdit, updateMovie, fetchOneMovie } from '../redux/action-creators';\nimport { useHistory } from \"react-router\";\nimport { StyledButton } from \"../components/styled/Button.style\";\nimport { Table } from \"../components/Table\";\nimport { Input } from \"../components/styled/Input.style\";\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport UpdateMovies from \"../components/UpdateMovie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditMovie = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    movieData\n  } = useSelector(state => state.fetchMoviesReducer);\n  const {\n    movieDataOne\n  } = useSelector(state => state.fetchOneMoviesReducer);\n  const {\n    updateMovieData,\n    error\n  } = useSelector(state => state.updateMoviesReducer);\n  const edit = useSelector(state => state.toggleEditreducer);\n  const schema = yup.object().shape({\n    id: yup.string(),\n    title: yup.string().required(),\n    year: yup.number().min(1000).max(9999).typeError(\"Must be a number\"),\n    rating: yup.number().min(1).max(10).typeError(\"Must be a number\"),\n    description: yup.string()\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = d => {\n    console.log(\"d\", d.id);\n    dispatch(updateMovie(d));\n    dispatch(toggleEdit({\n      id: d.id\n    }));\n  };\n\n  useEffect(() => {\n    dispatch(fetchMovie());\n  }, [dispatch]);\n  console.log(\"MOVIE ON DATA\", movieDataOne);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [movieDataOne && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movieDataOne.msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 18\n    }, this), error && console.log(\"movie data MSG\", error), edit ? /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(Table.Head, {\n        children: /*#__PURE__*/_jsxDEV(Table.TR, {\n          children: [/*#__PURE__*/_jsxDEV(Table.TH, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: movieData && movieData.map(post => /*#__PURE__*/_jsxDEV(Table.TR, {\n          children: [/*#__PURE__*/_jsxDEV(Table.TH, {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: post.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: post.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(StyledButton, {\n              buttonLabel: \"\\u2713\",\n              backgroundColor: \"#01bf41\",\n              backgroundColorOnHover: \"green\",\n              onClick: () => {\n                // dispatch(fetchOneMovie({id:post._id}))  \n                dispatch(toggleEdit({\n                  id: post._id\n                }));\n              },\n              children: \"EDIT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Table.TH, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(StyledButton, {\n              buttonLabel: \"X\",\n              backgroundColor: \"#e50d0d\",\n              onClick: () => {\n                dispatch(deleteMovie({\n                  id: post._id\n                }));\n              },\n              children: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(UpdateMovies, {\n        movieDataOne: movieDataOne\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 1\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditMovie, \"591vOFpP3EUkzOj9JQbIOzYooYQ=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector, useSelector, useForm];\n});\n\n_c = EditMovie;\nexport default EditMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovie\");","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/pages/EditMovie.js"],"names":["React","useEffect","useDispatch","useSelector","fetchMovie","deleteMovie","toggleEdit","updateMovie","fetchOneMovie","useHistory","StyledButton","Table","Input","useForm","yupResolver","yup","UpdateMovies","EditMovie","dispatch","history","movieData","state","fetchMoviesReducer","movieDataOne","fetchOneMoviesReducer","updateMovieData","error","updateMoviesReducer","edit","toggleEditreducer","schema","object","shape","id","string","title","required","year","number","min","max","typeError","rating","description","register","handleSubmit","formState","errors","reset","resolver","onSubmit","d","console","log","msg","map","post","_id"],"mappings":"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","sourcesContent":["import React, { useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {fetchMovie,deleteMovie,toggleEdit,updateMovie,fetchOneMovie} from '../redux/action-creators';\nimport { useHistory } from \"react-router\";\nimport { StyledButton}  from \"../components/styled/Button.style\";\nimport { Table } from \"../components/Table\";\nimport { Input } from \"../components/styled/Input.style\";\nimport {useForm} from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport UpdateMovies from \"../components/UpdateMovie\";\n\nconst EditMovie = () => {\n    \n  const dispatch = useDispatch();\n  const history = useHistory();\n  const  { movieData } = useSelector((state) =>  state.fetchMoviesReducer);\n  const  {movieDataOne}  = useSelector((state) =>  state.fetchOneMoviesReducer);\nconst {updateMovieData,error} = useSelector((state) =>  state.updateMoviesReducer);\n  const   edit  = useSelector((state) =>  state.toggleEditreducer);\n\n  const schema = yup.object().shape({\n    id: yup.string(),\n    title: yup.string().required(),\n    year: yup.number().min(1000).max(9999).typeError(\"Must be a number\"),\n    rating: yup.number().min(1).max(10).typeError(\"Must be a number\"),\n    description: yup.string(),\n  })\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({ resolver: yupResolver(schema)});\n\n  const onSubmit =  (d) =>{\n    console.log(\"d\",d.id);\n     dispatch(updateMovie(d));\n     dispatch(toggleEdit({id:d.id}));\n  \n     \n   \n  }\n\n\n  useEffect(() => {\n   \n   dispatch( fetchMovie());\n  \n   \n}, [dispatch]);\nconsole.log(\"MOVIE ON DATA\",movieDataOne)\n\n  return (\n    \n    <div>\n \n{movieDataOne && <p>{movieDataOne.msg}</p>}\n{error && console.log(\"movie data MSG\",error)}\n{edit ? <Table>\n  <Table.Head>\n    <Table.TR>\n      <Table.TH>Title</Table.TH>\n      <Table.TH>Year</Table.TH>\n      <Table.TH>Rating</Table.TH>\n      <Table.TH>Description</Table.TH>\n      <Table.TH>Edit</Table.TH>\n      <Table.TH>Delete</Table.TH>\n    \n    </Table.TR>\n  </Table.Head>\n  <Table.Body>\n  { \n    movieData && movieData.map(post => (\n      <Table.TR key={post._id}>\n      <Table.TH >{post.title}</Table.TH>\n      <Table.TH>{post.year}</Table.TH>\n      <Table.TH>{post.rating}</Table.TH>\n      <Table.TH>{post.description}</Table.TH>\n      <Table.TH > <StyledButton buttonLabel=\"✓\" backgroundColor=\"#01bf41\"  backgroundColorOnHover=\"green\"\n                        onClick={()=>{\n                          \n                          // dispatch(fetchOneMovie({id:post._id}))  \n                          dispatch(toggleEdit({id:post._id}))\n                                    \n                        }\n                  } >EDIT</StyledButton></Table.TH>   \n      <Table.TH> <StyledButton buttonLabel=\"X\"  backgroundColor=\"#e50d0d\" \n              onClick={() =>{ dispatch(deleteMovie({id:post._id}))}}>{\"\"}\n                </StyledButton> \n                </Table.TH>\n                             \n    </Table.TR>          \n          ))}\n  </Table.Body>\n</Table>\n\n: \n<>\n<UpdateMovies movieDataOne={movieDataOne}/>\n\n\n{/* <div>\n   <Table>\n    <Table.Head>\n    <Table.TR>\n <Table.TH>Title</Table.TH>\n <Table.TH>Year</Table.TH>\n <Table.TH>Rating</Table.TH>\n <Table.TH>Description</Table.TH>\n <Table.TH>UPDATE</Table.TH>\n <Table.TH>Cancel</Table.TH>\n\n</Table.TR>\n</Table.Head>\n</Table>\n   {movieDataOne && movieDataOne._id && movieDataOne.title && \n       <form onSubmit={handleSubmit(onSubmit)}>       \n         <Table>\n  <Table.Body>\n    <Table.TR key={movieDataOne._id}>\n    <Input type=\"hidden\" {...register(\"id\")} \n    // defaultValue={movieDataOne._id}\n    \n    />\n  <Table.TH > <Input   {...register(\"title\")} \n  // defaultValue={movieDataOne.title}\n  />\n  <p>{errors.title?.message}</p></Table.TH>\n\n  <Table.TH > <Input   {...register(\"year\")} \n  // defaultValue={movieDataOne.year}\n  />\n  <p>{errors.year?.message}</p></Table.TH>\n \n  <Table.TH >  <Input  {...register(\"rating\")} \n  //  defaultValue={movieDataOne.rating}\n   />\n  {errors.rating?.message}</Table.TH>\n \n  <Table.TH > <Input   {...register(\"description\")} \n  // defaultValue={movieDataOne.description}\n  />\n  <p>{errors.description?.message}</p></Table.TH>\n  \n <Table.TH > <StyledButton type='submit' buttonLabel=\"✓\"  backgroundColor=\"#01bf41\"  backgroundColorOnHover=\"green\"   \n         ></StyledButton></Table.TH>    \n         <Table.TH> <StyledButton buttonLabel=\"X\"  backgroundColor=\"#e50d0d\" \n              onClick={() => history.go(0) }>{\"\"}\n                </StyledButton> \n                </Table.TH> \n            </Table.TR> \n            \n            </Table.Body>           \n              </Table>              \n              </form>\n}\n</div> */}\n</>\n}       \n    </div>\n  )\n}\nexport default EditMovie"]},"metadata":{},"sourceType":"module"}