{"ast":null,"code":"import axios from \"axios\";\nimport { SIGN_IN_FAILURE, SIGN_IN_REQUEST, SIGN_IN_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_OUT_FAILURE, SIGN_OUT_REQUEST, SIGN_OUT_SUCCESS, FETCH_MOVIES_SUCCESS, FETCH_MOVIES_FAILURE, FETCH_MOVIES_REQUEST, CREATE_MOVIES_SUCCESS, CREATE_MOVIES_FAILURE, CREATE_MOVIES_REQUEST, DELETE_MOVIES_SUCCESS, DELETE_MOVIES_FAILURE, DELETE_MOVIES_REQUEST } from './action-types';\nimport { URL } from \"../components/URL\"; // Sign up action creators\n\nconst signUpRequest = () => {\n  return {\n    type: SIGN_UP_REQUEST\n  };\n};\n\nconst signUpSuccess = user => {\n  return {\n    type: SIGN_UP_SUCCESS,\n    payload: {\n      user\n    }\n  };\n};\n\nconst signUpFailure = error => {\n  return {\n    type: SIGN_UP_FAILURE,\n    payload: error\n  };\n};\n\nexport const signUp = (user, history) => {\n  return function (dispatch) {\n    dispatch(signUpRequest());\n    axios({\n      method: \"post\",\n      url: URL + '/signUp',\n      data: user\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      dispatch(signUpSuccess(data)); // history.push(\"/\")\n    }).catch(error => {\n      console.log(error);\n      dispatch(signUpFailure(error));\n    });\n  };\n}; //Sign in action creators\n\nconst signInRequest = () => {\n  return {\n    type: SIGN_IN_REQUEST\n  };\n};\n\nconst signInSuccess = token => {\n  return {\n    type: SIGN_IN_SUCCESS,\n    payload: {\n      token\n    }\n  };\n};\n\nconst signInFailure = error => {\n  return {\n    type: SIGN_IN_FAILURE,\n    payload: error\n  };\n};\n\nexport const signIn = (payload, history) => {\n  return function (dispatch) {\n    dispatch(signInRequest);\n    axios({\n      method: \"POST\",\n      url: URL + \"/signIn\",\n      data: payload,\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      }\n    }).then(response => {\n      const {\n        token\n      } = response.data;\n      localStorage.setItem(\"USER-TOKEN\", token);\n      dispatch(signInSuccess(token)); // history.push(\"/\");\n    }).catch(error => {\n      dispatch(signInFailure(error));\n    });\n  };\n}; // sign out action creators\n\nexport const signOutRequest = () => {\n  return {\n    type: SIGN_OUT_REQUEST\n  };\n};\nexport const signOutSuccess = () => {\n  return {\n    type: SIGN_OUT_SUCCESS\n  };\n};\nexport const signOutFailure = () => {\n  return {\n    type: SIGN_OUT_FAILURE\n  };\n};\nexport const signOut = history => {\n  return function (dispatch) {\n    dispatch(signOutRequest());\n    localStorage.clear();\n    history.push('/signin');\n\n    if (localStorage.getItem(\"USER-TOKEN\")) {\n      dispatch(signOutFailure());\n    } else {\n      dispatch(signOutSuccess());\n    }\n  };\n}; // fetch movies action creators\n\nconst fetchMoviesRequest = () => {\n  return {\n    type: FETCH_MOVIES_REQUEST,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchMoviesSuccess = movieData => {\n  return {\n    type: FETCH_MOVIES_SUCCESS,\n    payload: {\n      movieData\n    }\n  };\n};\n\nconst fetchMoviesFailure = error => {\n  return {\n    type: FETCH_MOVIES_FAILURE,\n    payload: error\n  };\n};\n\nexport const fetchMovie = payload => {\n  return async function (dispatch) {\n    dispatch(fetchMoviesRequest());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL + '/getallmovies',\n        data: payload\n      });\n      const result = res.data;\n      console.log(\"result\", result);\n      dispatch(fetchMoviesSuccess(result));\n    } catch (err) {\n      console.log(\"error\", err);\n      dispatch(fetchMoviesFailure(err));\n    }\n  };\n}; // create Movie action\n\nconst createMovieRequest = () => {\n  return {\n    type: CREATE_MOVIES_REQUEST\n  };\n};\n\nconst createMovieSuccess = createMovieData => {\n  return {\n    type: CREATE_MOVIES_SUCCESS,\n    payload: {\n      createMovieData\n    }\n  };\n};\n\nconst createMovieFailure = error => {\n  return {\n    type: CREATE_MOVIES_FAILURE,\n    payload: error\n  };\n};\n\nexport const createMovie = createMovieData => {\n  return function (dispatch) {\n    dispatch(createMovieRequest());\n    axios({\n      method: \"post\",\n      url: URL + '/addmovie',\n      data: createMovieData,\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      }\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      dispatch(createMovieSuccess(data));\n    }).catch(error => {\n      console.log(error);\n      dispatch(createMovieFailure(error));\n    });\n  };\n}; // Delete Movie action\n\nconst deleteMovieRequest = () => {\n  return {\n    type: DELETE_MOVIES_REQUEST\n  };\n};\n\nconst deleteMovieSuccess = deleteMovieData => {\n  return {\n    type: DELETE_MOVIES_SUCCESS,\n    payload: {\n      deleteMovieData\n    }\n  };\n};\n\nconst deleteMovieFailure = error => {\n  return {\n    type: DELETE_MOVIES_FAILURE,\n    payload: error\n  };\n};\n\nexport const deleteMovie = deleteMovieData => {\n  return function (dispatch) {\n    dispatch(deleteMovieRequest());\n    axios({\n      method: \"DELETE\",\n      url: URL + '/deletemovie',\n      data: deleteMovieData,\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      }\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      dispatch(deleteMovieSuccess(data));\n    }).catch(error => {\n      console.log(error);\n      dispatch(deleteMovieFailure(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/redux/action-creators.js"],"names":["axios","SIGN_IN_FAILURE","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_OUT_FAILURE","SIGN_OUT_REQUEST","SIGN_OUT_SUCCESS","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_FAILURE","FETCH_MOVIES_REQUEST","CREATE_MOVIES_SUCCESS","CREATE_MOVIES_FAILURE","CREATE_MOVIES_REQUEST","DELETE_MOVIES_SUCCESS","DELETE_MOVIES_FAILURE","DELETE_MOVIES_REQUEST","URL","signUpRequest","type","signUpSuccess","user","payload","signUpFailure","error","signUp","history","dispatch","method","url","data","then","response","catch","console","log","signInRequest","signInSuccess","token","signInFailure","signIn","headers","Authorization","localStorage","getItem","setItem","signOutRequest","signOutSuccess","signOutFailure","signOut","clear","push","fetchMoviesRequest","loading","fetchMoviesSuccess","movieData","fetchMoviesFailure","fetchMovie","res","result","err","createMovieRequest","createMovieSuccess","createMovieData","createMovieFailure","createMovie","deleteMovieRequest","deleteMovieSuccess","deleteMovieData","deleteMovieFailure","deleteMovie"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n    SIGN_IN_FAILURE,\n    SIGN_IN_REQUEST,\n    SIGN_IN_SUCCESS,\n    SIGN_UP_FAILURE,\n    SIGN_UP_REQUEST,\n    SIGN_UP_SUCCESS,\n    SIGN_OUT_FAILURE,\n    SIGN_OUT_REQUEST,\n    SIGN_OUT_SUCCESS,\n\n    FETCH_MOVIES_SUCCESS,\n    FETCH_MOVIES_FAILURE,\n    FETCH_MOVIES_REQUEST,\n\n    CREATE_MOVIES_SUCCESS,\n    CREATE_MOVIES_FAILURE,\n    CREATE_MOVIES_REQUEST,\n\n    DELETE_MOVIES_SUCCESS,\n    DELETE_MOVIES_FAILURE,\n    DELETE_MOVIES_REQUEST\n} from './action-types';\n\nimport { URL } from \"../components/URL\";\n\n// Sign up action creators\n\nconst signUpRequest = () =>{\n    return{\n        type: SIGN_UP_REQUEST,\n    };\n};\n\nconst signUpSuccess = (user) =>{\n    return{\n        type: SIGN_UP_SUCCESS,\n        payload: {\n            user\n        }\n    };\n};\n\nconst signUpFailure = (error) =>{\n    return {\n        type: SIGN_UP_FAILURE,\n        payload:error\n    };\n};\n\nexport const signUp = (user,history) =>{\n    return function (dispatch) {\n        dispatch(signUpRequest());\n        axios({\n            method:\"post\",\n            url: URL+'/signUp',\n            data: user,\n        })\n        .then((response)=>{\n            const {data} = response.data;\n            dispatch(signUpSuccess(data));\n            // history.push(\"/\")\n        })\n        .catch((error)=>{\n            console.log(error);\n            dispatch(signUpFailure(error));\n        });\n    };\n};\n\n//Sign in action creators\n\nconst signInRequest = () =>{\n    return {\n        type: SIGN_IN_REQUEST\n    };\n};\n\nconst signInSuccess = (token) =>{\n    return {\n        type: SIGN_IN_SUCCESS,\n        payload:{\n            token\n        }\n    };\n};\n\nconst signInFailure = (error) =>{\n    return {\n        type: SIGN_IN_FAILURE,\n        payload: error,\n    };\n};\n\nexport const signIn = (payload,history) =>{\n    return function (dispatch) {\n        dispatch(signInRequest);\n        axios({\n            method:\"POST\",\n            url: URL+\"/signIn\",\n            data:payload,\n            headers:{\n                \"Content-type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        })\n        .then((response)=>{\n            const {token} = response.data;\n            localStorage.setItem(\"USER-TOKEN\",token);\n            dispatch(signInSuccess(token));\n            // history.push(\"/\");\n        })\n        .catch((error)=>{\n            dispatch(signInFailure(error));\n        });\n    };\n};\n\n// sign out action creators\n\nexport const signOutRequest = () =>{\n    return {\n        type: SIGN_OUT_REQUEST,\n    };\n};\n\nexport const signOutSuccess = () =>{\n    return {\n      type: SIGN_OUT_SUCCESS,\n    };\n  };\n\nexport const signOutFailure = () =>{\n    return {\n        type: SIGN_OUT_FAILURE\n    };\n};\n\nexport const signOut = (history) =>{\n    return function(dispatch){\n        dispatch(signOutRequest());\n        localStorage.clear();\n        history.push('/signin');\n        if(localStorage.getItem(\"USER-TOKEN\")){\n            dispatch(signOutFailure());\n        }\n        else{\n            dispatch(signOutSuccess());\n        }\n    };\n}\n\n\n// fetch movies action creators\n\nconst fetchMoviesRequest = () =>{\n    return{\n        type: FETCH_MOVIES_REQUEST,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchMoviesSuccess = (movieData) =>{\n    \n    return{\n        type: FETCH_MOVIES_SUCCESS,\n        payload: {\n            movieData\n        }\n    };\n};\n\nconst fetchMoviesFailure = (error) =>{\n    return {\n        type: FETCH_MOVIES_FAILURE,\n        payload:error\n    };\n};\n\nexport const fetchMovie = (payload) =>{\n    \n    return async function (dispatch) {\n        dispatch(fetchMoviesRequest());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL+'/getallmovies',\n                    data: payload,\n                });\n                const result = res.data;\n                console.log(\"result\",result);\n                dispatch(fetchMoviesSuccess(result));\n        }catch(err){\n            console.log(\"error\",err);\n                dispatch(fetchMoviesFailure(err));\n        }\n    };\n};\n\n// create Movie action\n\nconst createMovieRequest = () =>{\n    return{\n        type: CREATE_MOVIES_REQUEST,\n    };\n};\n\nconst createMovieSuccess = (createMovieData) =>{\n    return{\n        type: CREATE_MOVIES_SUCCESS,\n        payload: {\n            createMovieData\n        }\n    };\n};\n\nconst createMovieFailure = (error) =>{\n    return {\n        type: CREATE_MOVIES_FAILURE,\n        payload:error\n    };\n};\n\nexport const createMovie = (createMovieData) =>{\n    return function (dispatch) {\n        dispatch(createMovieRequest());\n        axios({\n            method:\"post\",\n            url: URL+'/addmovie',\n            data: createMovieData,\n            headers:{\n                \"Content-type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        })\n        .then((response)=>{\n            const {data} = response.data;\n            dispatch(createMovieSuccess(data));\n         \n        })\n        .catch((error)=>{\n            console.log(error);\n            dispatch(createMovieFailure(error));\n        });\n    };\n};\n\n// Delete Movie action\n\nconst deleteMovieRequest = () =>{\n    return{\n        type: DELETE_MOVIES_REQUEST,\n    };\n};\n\nconst deleteMovieSuccess = (deleteMovieData) =>{\n    return{\n        type: DELETE_MOVIES_SUCCESS,\n        payload: {\n            deleteMovieData\n        }\n    };\n};\n\nconst deleteMovieFailure = (error) =>{\n    return {\n        type: DELETE_MOVIES_FAILURE,\n        payload:error\n    };\n};\n\nexport const deleteMovie = (deleteMovieData) =>{\n    return function (dispatch) {\n        dispatch(deleteMovieRequest());\n        axios({\n            method:\"DELETE\",\n            url: URL+'/deletemovie',\n            data: deleteMovieData,\n            headers:{\n                \"Content-type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        })\n        .then((response)=>{\n            const {data} = response.data;\n            dispatch(deleteMovieSuccess(data));\n         \n        })\n        .catch((error)=>{\n            console.log(error);\n            dispatch(deleteMovieFailure(error));\n        });\n    };\n};\n\n"]},"metadata":{},"sourceType":"module"}