{"ast":null,"code":"import axios from \"axios\";\nimport { SIGN_IN_FAILURE, SIGN_IN_REQUEST, SIGN_IN_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_OUT_FAILURE, SIGN_OUT_REQUEST, SIGN_OUT_SUCCESS, FETCH_MOVIES_SUCCESS, FETCH_MOVIES_FAILURE, FETCH_MOVIES_REQUEST } from './action-types';\nimport { URL } from \"../components/URL\"; // Sign up action creators\n\nconst signUpRequest = () => {\n  return {\n    type: SIGN_UP_REQUEST\n  };\n};\n\nconst signUpSuccess = user => {\n  return {\n    type: SIGN_UP_SUCCESS,\n    payload: {\n      user\n    }\n  };\n};\n\nconst signUpFailure = error => {\n  return {\n    type: SIGN_UP_FAILURE,\n    payload: error\n  };\n};\n\nexport const signUp = (user, history) => {\n  return function (dispatch) {\n    dispatch(signUpRequest());\n    axios({\n      method: \"post\",\n      url: URL + '/signUp',\n      data: user\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      dispatch(signUpSuccess(data));\n      history.push(\"/\");\n    }).catch(error => {\n      console.log(error);\n      dispatch(signUpFailure(error));\n    });\n  };\n}; //Sign in action creators\n\nconst signInRequest = () => {\n  return {\n    type: SIGN_IN_REQUEST\n  };\n};\n\nconst signInSuccess = token => {\n  return {\n    type: SIGN_IN_SUCCESS,\n    payload: {\n      token\n    }\n  };\n};\n\nconst signInFailure = error => {\n  return {\n    type: SIGN_IN_FAILURE,\n    payload: error\n  };\n};\n\nexport const signIn = (payload, history) => {\n  return function (dispatch) {\n    dispatch(signInRequest);\n    axios({\n      method: \"POST\",\n      url: URL + \"/signIn\",\n      data: payload,\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      }\n    }).then(response => {\n      const {\n        token\n      } = response.data;\n      localStorage.setItem(\"USER-TOKEN\", token);\n      dispatch(signInSuccess(token));\n      history.push(\"/home\");\n    }).catch(error => {\n      dispatch(signInFailure(error));\n    });\n  };\n}; // sign out action creators\n\nexport const signOutRequest = () => {\n  return {\n    type: SIGN_OUT_REQUEST\n  };\n};\nexport const signOutSuccess = () => {\n  return {\n    type: SIGN_OUT_SUCCESS\n  };\n};\nexport const signOutFailure = () => {\n  return {\n    type: SIGN_OUT_FAILURE\n  };\n};\nexport const signOut = history => {\n  return function (dispatch) {\n    dispatch(signOutRequest());\n    localStorage.clear();\n    history.push('/signin');\n\n    if (localStorage.getItem(\"USER-TOKEN\")) {\n      dispatch(signOutFailure());\n    } else {\n      dispatch(signOutSuccess());\n    }\n  };\n}; // fetch movies action creators\n\nconst fetchMoviesRequest = () => {\n  return {\n    type: FETCH_MOVIES_REQUEST,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchMoviesSuccess = movieData => {\n  return {\n    type: FETCH_MOVIES_SUCCESS,\n    payload: movieData\n  };\n};\n\nconst fetchMoviesFailure = error => {\n  return {\n    type: FETCH_MOVIES_FAILURE,\n    payload: error\n  };\n};\n\nexport const fetchMovie = payload => {\n  return function (dispatch) {\n    dispatch(fetchMoviesRequest());\n    axios({\n      method: \"get\",\n      url: URL + '/getallmovies',\n      data: payload\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      dispatch(fetchMoviesSuccess(data));\n    }).catch(error => {\n      console.log(error);\n      dispatch(fetchMoviesFailure(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/redux/action-creators.js"],"names":["axios","SIGN_IN_FAILURE","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_OUT_FAILURE","SIGN_OUT_REQUEST","SIGN_OUT_SUCCESS","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_FAILURE","FETCH_MOVIES_REQUEST","URL","signUpRequest","type","signUpSuccess","user","payload","signUpFailure","error","signUp","history","dispatch","method","url","data","then","response","push","catch","console","log","signInRequest","signInSuccess","token","signInFailure","signIn","headers","Authorization","localStorage","getItem","setItem","signOutRequest","signOutSuccess","signOutFailure","signOut","clear","fetchMoviesRequest","loading","fetchMoviesSuccess","movieData","fetchMoviesFailure","fetchMovie"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n    SIGN_IN_FAILURE,\n    SIGN_IN_REQUEST,\n    SIGN_IN_SUCCESS,\n    SIGN_UP_FAILURE,\n    SIGN_UP_REQUEST,\n    SIGN_UP_SUCCESS,\n    SIGN_OUT_FAILURE,\n    SIGN_OUT_REQUEST,\n    SIGN_OUT_SUCCESS,\n\n    FETCH_MOVIES_SUCCESS,\n    FETCH_MOVIES_FAILURE,\n    FETCH_MOVIES_REQUEST\n} from './action-types';\n\nimport { URL } from \"../components/URL\";\n\n// Sign up action creators\n\nconst signUpRequest = () =>{\n    return{\n        type: SIGN_UP_REQUEST,\n    };\n};\n\nconst signUpSuccess = (user) =>{\n    return{\n        type: SIGN_UP_SUCCESS,\n        payload: {\n            user\n        }\n    };\n};\n\nconst signUpFailure = (error) =>{\n    return {\n        type: SIGN_UP_FAILURE,\n        payload:error\n    };\n};\n\nexport const signUp = (user,history) =>{\n    return function (dispatch) {\n        dispatch(signUpRequest());\n        axios({\n            method:\"post\",\n            url: URL+'/signUp',\n            data: user,\n        })\n        .then((response)=>{\n            const {data} = response.data;\n            dispatch(signUpSuccess(data));\n            history.push(\"/\")\n        })\n        .catch((error)=>{\n            console.log(error);\n            dispatch(signUpFailure(error));\n        });\n    };\n};\n\n//Sign in action creators\n\nconst signInRequest = () =>{\n    return {\n        type: SIGN_IN_REQUEST\n    };\n};\n\nconst signInSuccess = (token) =>{\n    return {\n        type: SIGN_IN_SUCCESS,\n        payload:{\n            token\n        }\n    };\n};\n\nconst signInFailure = (error) =>{\n    return {\n        type: SIGN_IN_FAILURE,\n        payload: error,\n    };\n};\n\nexport const signIn = (payload,history) =>{\n    return function (dispatch) {\n        dispatch(signInRequest);\n        axios({\n            method:\"POST\",\n            url: URL+\"/signIn\",\n            data:payload,\n            headers:{\n                \"Content-type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        })\n        .then((response)=>{\n            const {token} = response.data;\n            localStorage.setItem(\"USER-TOKEN\",token);\n            dispatch(signInSuccess(token));\n            history.push(\"/home\");\n        })\n        .catch((error)=>{\n            dispatch(signInFailure(error));\n        });\n    };\n};\n\n// sign out action creators\n\nexport const signOutRequest = () =>{\n    return {\n        type: SIGN_OUT_REQUEST,\n    };\n};\n\nexport const signOutSuccess = () =>{\n    return {\n      type: SIGN_OUT_SUCCESS,\n    };\n  };\n\nexport const signOutFailure = () =>{\n    return {\n        type: SIGN_OUT_FAILURE\n    };\n};\n\nexport const signOut = (history) =>{\n    return function(dispatch){\n        dispatch(signOutRequest());\n        localStorage.clear();\n        history.push('/signin');\n        if(localStorage.getItem(\"USER-TOKEN\")){\n            dispatch(signOutFailure());\n        }\n        else{\n            dispatch(signOutSuccess());\n        }\n    };\n}\n\n\n// fetch movies action creators\n\nconst fetchMoviesRequest = () =>{\n    return{\n        type: FETCH_MOVIES_REQUEST,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchMoviesSuccess = (movieData) =>{\n    return{\n        type: FETCH_MOVIES_SUCCESS,\n        payload: \n            movieData\n        \n    };\n};\n\nconst fetchMoviesFailure = (error) =>{\n    return {\n        type: FETCH_MOVIES_FAILURE,\n        payload:error\n    };\n};\n\nexport const fetchMovie = (payload) =>{\n    return function (dispatch) {\n        dispatch(fetchMoviesRequest());\n        axios({\n            method:\"get\",\n            url: URL+'/getallmovies',\n            data: payload,\n        })\n        .then((response)=>{\n            const {data} = response.data;\n            dispatch(fetchMoviesSuccess(data));\n            \n        })\n        .catch((error)=>{\n            console.log(error);\n            dispatch(fetchMoviesFailure(error));\n        });\n    };\n};"]},"metadata":{},"sourceType":"module"}