{"ast":null,"code":"var _jsxFileName = \"/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/components/privateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserRoute = ({\n  component,\n  path,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    currentUser\n  } = useSelector(state => state.authentication);\n  return currentUser !== null ? /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    path: path,\n    component: component,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n\n_s(UserRoute, \"LMeZ/Bn3NJgpFgBto0Ws/7P+xNQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = UserRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRoute\");","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/components/privateRoute.js"],"names":["React","Route","Redirect","useSelector","UserRoute","component","path","rest","currentUser","state","authentication"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AACxBC,EAAAA,SADwB;AAExBC,EAAAA,IAFwB;AAGxB,KAAGC;AAHqB,CAAD,KAInB;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAmBL,WAAW,CACjCM,KAAD,IAAWA,KAAK,CAACC,cADiB,CAApC;AAIA,SAAOF,WAAW,KAAK,IAAhB,gBACL,QAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAEF,IAAnB;AAAyB,IAAA,SAAS,EAAED,SAApC;AAAA,OAAmDE;AAAnD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGH,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,UAHJ;AAKD,CAdM;;GAAMH,S;UAKcD,W;;;KALdC,S","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nexport const UserRoute = ({\n  component,\n  path,\n  ...rest\n}) => {\n  const { currentUser, } = useSelector(\n    (state) => state.authentication\n  );\n\n  return currentUser !== null ? (\n    <Route exact path={path} component={component} {...rest} />\n  ) : (\n      <Redirect to={\"/\"} />\n    );\n};"]},"metadata":{},"sourceType":"module"}