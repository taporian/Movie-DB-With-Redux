{"ast":null,"code":"import axios from \"axios\";\nimport { SIGN_IN_FAILURE, SIGN_IN_REQUEST, SIGN_IN_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_OUT_FAILURE, SIGN_OUT_REQUEST, SIGN_OUT_SUCCESS, FETCH_MOVIES_SUCCESS, FETCH_MOVIES_FAILURE, FETCH_MOVIES_REQUEST, CREATE_MOVIES_SUCCESS, CREATE_MOVIES_FAILURE, CREATE_MOVIES_REQUEST, DELETE_MOVIES_SUCCESS, DELETE_MOVIES_FAILURE, DELETE_MOVIES_REQUEST, UPDATE_MOVIES_SUCCESS, UPDATE_MOVIES_FAILURE, UPDATE_MOVIES_REQUEST, FETCH_ONE_MOVIE_REQUEST, FETCH_ONE_MOVIE_SUCCESS, FETCH_ONE_MOVIE_FAILURE, FILTER_MOVIE_REQUEST, FILTER_MOVIE_SUCCESS, FILTER_MOVIE_FAILURE, EDIT_ON } from './action-types';\nimport { URL } from \"../components/URL\"; // Sign up action creators\n\nconst signUpRequest = () => {\n  return {\n    type: SIGN_UP_REQUEST\n  };\n};\n\nconst signUpSuccess = user => {\n  return {\n    type: SIGN_UP_SUCCESS,\n    payload: {\n      user\n    }\n  };\n};\n\nconst signUpFailure = error => {\n  return {\n    type: SIGN_UP_FAILURE,\n    payload: error\n  };\n};\n\nexport const signUp = (user, history) => {\n  return function (dispatch) {\n    dispatch(signUpRequest());\n    axios({\n      method: \"post\",\n      url: URL + '/signUp',\n      data: user\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      dispatch(signUpSuccess(data)); // history.push(\"/\")\n    }).catch(error => {\n      if (error.response && error.response.status === 400) {\n        dispatch(signUpFailure(error));\n      }\n\n      ;\n      dispatch(signUpFailure(error));\n    });\n  };\n}; //Sign in action creators\n\nconst signInRequest = () => {\n  return {\n    type: SIGN_IN_REQUEST\n  };\n};\n\nconst signInSuccess = token => {\n  return {\n    type: SIGN_IN_SUCCESS,\n    payload: {\n      token\n    }\n  };\n};\n\nconst signInFailure = error => {\n  console.log(\"ERROR FAILURE\", error);\n  return {\n    type: SIGN_IN_FAILURE,\n    payload: error\n  };\n};\n\nexport const signIn = (payload, history) => {\n  console.log(\"try to SIgn \", payload);\n  return async function (dispatch) {\n    console.log(\"try to SIgn \", payload);\n    dispatch(signInRequest);\n\n    try {\n      console.log(\"try to SIgn \", payload);\n      const res = await axios({\n        method: \"POST\",\n        url: URL + \"/signIn\",\n        data: payload,\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        }\n      });\n      console.log(\"SIGN SUCC\", res);\n      const {\n        token\n      } = res.data;\n      console.log(\"RES SIGN IN\", res);\n      localStorage.setItem(\"USER-TOKEN\", token);\n      dispatch(signInSuccess(token));\n    } catch (error) {\n      console.log(\"SIGN FAILURE\", error);\n      dispatch(signInFailure(error));\n    }\n  };\n}; // sign out action creators\n\nexport const signOutRequest = () => {\n  return {\n    type: SIGN_OUT_REQUEST\n  };\n};\nexport const signOutSuccess = () => {\n  return {\n    type: SIGN_OUT_SUCCESS\n  };\n};\nexport const signOutFailure = () => {\n  return {\n    type: SIGN_OUT_FAILURE\n  };\n};\nexport const signOut = history => {\n  return function (dispatch) {\n    dispatch(signOutRequest());\n    localStorage.clear();\n\n    if (localStorage.getItem(\"USER-TOKEN\")) {\n      dispatch(signOutFailure());\n    } else {\n      dispatch(signOutSuccess());\n    }\n  };\n}; // fetch movies action creators\n\nconst fetchMoviesRequest = () => {\n  return {\n    type: FETCH_MOVIES_REQUEST,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchMoviesSuccess = movieData => {\n  return {\n    type: FETCH_MOVIES_SUCCESS,\n    payload: {\n      movieData\n    }\n  };\n};\n\nconst fetchMoviesFailure = error => {\n  return {\n    type: FETCH_MOVIES_FAILURE,\n    payload: error\n  };\n};\n\nexport const fetchMovie = payload => {\n  return async function (dispatch) {\n    dispatch(fetchMoviesRequest());\n\n    try {\n      const res = await axios({\n        method: \"get\",\n        url: URL + '/getallmovies',\n        data: payload\n      });\n      const result = res.data;\n      dispatch(fetchMoviesSuccess(result));\n    } catch (err) {\n      if (err.response && err.response.status === 401) {\n        dispatch(signOut());\n      }\n\n      ;\n      dispatch(fetchMoviesFailure(err));\n    }\n  };\n}; // fetch ONE movie action creators\n\nconst fetchOneMoviesRequest = () => {\n  return {\n    type: FETCH_ONE_MOVIE_REQUEST,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst fetchOneMoviesSuccess = movieDataOne => {\n  return {\n    type: FETCH_ONE_MOVIE_SUCCESS,\n    payload: {\n      movieDataOne\n    }\n  };\n};\n\nconst fetchOneMoviesFailure = error => {\n  return {\n    type: FETCH_ONE_MOVIE_FAILURE,\n    payload: error\n  };\n};\n\nexport const fetchOneMovie = movieDataOne => {\n  return async function (dispatch) {\n    dispatch(fetchOneMoviesRequest());\n\n    try {\n      const res = await axios({\n        method: \"post\",\n        url: URL + '/getonemovie',\n        data: movieDataOne,\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const result = res.data;\n      dispatch(fetchOneMoviesSuccess(result));\n    } catch (err) {\n      if (err.response && err.response.status === 401) {\n        dispatch(signOut());\n      }\n\n      ;\n      dispatch(fetchOneMoviesFailure(err));\n    }\n  };\n}; // create Movie action\n\nconst createMovieRequest = () => {\n  return {\n    type: CREATE_MOVIES_REQUEST\n  };\n};\n\nconst createMovieSuccess = createMovieData => {\n  return {\n    type: CREATE_MOVIES_SUCCESS,\n    payload: {\n      createMovieData\n    }\n  };\n};\n\nconst createMovieFailure = error => {\n  return {\n    type: CREATE_MOVIES_FAILURE,\n    payload: error\n  };\n};\n\nexport const createMovie = createMovieData => {\n  return async function (dispatch) {\n    dispatch(createMovieRequest());\n\n    try {\n      const response = await axios({\n        method: \"post\",\n        url: URL + '/addmovie',\n        data: createMovieData,\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const data = response.data;\n      dispatch(fetchMovie());\n      dispatch(createMovieSuccess(data));\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        dispatch(signOut());\n      }\n\n      ;\n      dispatch(createMovieFailure(error));\n    }\n  };\n}; // Update Movie action\n\nconst updateMovieRequest = () => {\n  return {\n    type: UPDATE_MOVIES_REQUEST\n  };\n};\n\nconst updateMovieSuccess = deleteMovieData => {\n  return {\n    type: UPDATE_MOVIES_SUCCESS,\n    payload: {\n      deleteMovieData\n    }\n  };\n};\n\nconst updateMovieFailure = error => {\n  console.log(\"ERROROROOROROR\", error);\n  return {\n    type: UPDATE_MOVIES_FAILURE,\n    payload: error\n  };\n};\n\nexport const updateMovie = updateMovieData => {\n  return async function (dispatch) {\n    dispatch(updateMovieRequest());\n\n    try {\n      const response = await axios({\n        method: \"PUT\",\n        url: URL + '/updatemovie',\n        data: updateMovieData,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const {\n        data\n      } = response;\n\n      if (!data.success) {\n        dispatch(updateMovieFailure(data.msg));\n        return false;\n      }\n\n      dispatch(fetchMovie());\n      dispatch(updateMovieSuccess(data));\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        dispatch(signOut());\n      }\n\n      ;\n      dispatch(updateMovieFailure(error));\n    }\n  };\n};\nexport const updateMovie2 = async (updateMovieData, dispatch) => {\n  dispatch(updateMovieRequest());\n\n  try {\n    const response = await axios({\n      method: \"PUT\",\n      url: URL + '/updatemovie',\n      data: updateMovieData,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n      }\n    });\n    const {\n      data\n    } = response;\n\n    if (!data.success) {\n      dispatch(updateMovieFailure(data.msg));\n      return false;\n    } else {\n      dispatch(fetchMovie());\n      dispatch(updateMovieSuccess(data));\n      return true;\n    }\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      dispatch(signOut());\n    }\n\n    ;\n    dispatch(updateMovieFailure(error));\n  }\n}; // Delete Movie action\n\nconst deleteMovieRequest = () => {\n  return {\n    type: DELETE_MOVIES_REQUEST\n  };\n};\n\nconst deleteMovieSuccess = deleteMovieData => {\n  return {\n    type: DELETE_MOVIES_SUCCESS,\n    payload: {\n      deleteMovieData\n    }\n  };\n};\n\nconst deleteMovieFailure = error => {\n  return {\n    type: DELETE_MOVIES_FAILURE,\n    payload: error\n  };\n};\n\nexport const deleteMovie = deleteMovieData => {\n  return async function (dispatch) {\n    dispatch(deleteMovieRequest());\n\n    try {\n      const response = await axios({\n        method: \"DELETE\",\n        url: URL + '/deletemovie',\n        data: deleteMovieData,\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const {\n        data\n      } = response;\n      dispatch(fetchMovie());\n      dispatch(deleteMovieSuccess(data));\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        dispatch(signOut());\n      }\n\n      ;\n      dispatch(deleteMovieFailure(error));\n    }\n  };\n}; //Action Toggle Edit\n\nconst toggleEditSuccess = editData => {\n  return {\n    type: EDIT_ON,\n    payload: {\n      editData\n    }\n  };\n};\n\nexport const toggleEditTrue = () => {\n  return {\n    type: EDIT_ON\n  };\n};\nexport const toggleEdit = editData => {\n  console.log(\"edit\", editData);\n  return async function (dispatch) {\n    try {\n      dispatch(fetchOneMovie(editData));\n      dispatch(toggleEditSuccess());\n      dispatch(fetchMovie());\n    } catch (error) {}\n  };\n}; // Filter movie action creators\n\nconst filterMoviesRequest = () => {\n  return {\n    type: FILTER_MOVIE_REQUEST,\n    payload: {\n      loading: true\n    }\n  };\n};\n\nconst filterMoviesSuccess = movieFilterData => {\n  return {\n    type: FILTER_MOVIE_SUCCESS,\n    payload: {\n      movieFilterData\n    }\n  };\n};\n\nconst filterMoviesFailure = error => {\n  return {\n    type: FILTER_MOVIE_FAILURE,\n    payload: error\n  };\n};\n\nexport const filterMovie = movieFilterData => {\n  return async function (dispatch) {\n    dispatch(filterMoviesRequest());\n\n    try {\n      const res = await axios({\n        method: \"post\",\n        url: URL + '/searchmovie',\n        data: movieFilterData,\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n        }\n      });\n      const result = res.data.data;\n      console.log(\"result FILTER\", res);\n      dispatch(filterMoviesSuccess(result));\n    } catch (err) {\n      if (err.response && err.response.status === 401) {\n        dispatch(signOut());\n      }\n\n      ;\n      dispatch(filterMoviesFailure(err));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/chrishar/Documents/CODI/TF961-CODI]/Movie-DB/frontend/src/redux/action-creators.js"],"names":["axios","SIGN_IN_FAILURE","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_OUT_FAILURE","SIGN_OUT_REQUEST","SIGN_OUT_SUCCESS","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_FAILURE","FETCH_MOVIES_REQUEST","CREATE_MOVIES_SUCCESS","CREATE_MOVIES_FAILURE","CREATE_MOVIES_REQUEST","DELETE_MOVIES_SUCCESS","DELETE_MOVIES_FAILURE","DELETE_MOVIES_REQUEST","UPDATE_MOVIES_SUCCESS","UPDATE_MOVIES_FAILURE","UPDATE_MOVIES_REQUEST","FETCH_ONE_MOVIE_REQUEST","FETCH_ONE_MOVIE_SUCCESS","FETCH_ONE_MOVIE_FAILURE","FILTER_MOVIE_REQUEST","FILTER_MOVIE_SUCCESS","FILTER_MOVIE_FAILURE","EDIT_ON","URL","signUpRequest","type","signUpSuccess","user","payload","signUpFailure","error","signUp","history","dispatch","method","url","data","then","response","catch","status","signInRequest","signInSuccess","token","signInFailure","console","log","signIn","res","headers","localStorage","setItem","signOutRequest","signOutSuccess","signOutFailure","signOut","clear","getItem","fetchMoviesRequest","loading","fetchMoviesSuccess","movieData","fetchMoviesFailure","fetchMovie","result","err","fetchOneMoviesRequest","fetchOneMoviesSuccess","movieDataOne","fetchOneMoviesFailure","fetchOneMovie","Authorization","createMovieRequest","createMovieSuccess","createMovieData","createMovieFailure","createMovie","updateMovieRequest","updateMovieSuccess","deleteMovieData","updateMovieFailure","updateMovie","updateMovieData","success","msg","updateMovie2","deleteMovieRequest","deleteMovieSuccess","deleteMovieFailure","deleteMovie","toggleEditSuccess","editData","toggleEditTrue","toggleEdit","filterMoviesRequest","filterMoviesSuccess","movieFilterData","filterMoviesFailure","filterMovie"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n    SIGN_IN_FAILURE,\n    SIGN_IN_REQUEST,\n    SIGN_IN_SUCCESS,\n    SIGN_UP_FAILURE,\n    SIGN_UP_REQUEST,\n    SIGN_UP_SUCCESS,\n    SIGN_OUT_FAILURE,\n    SIGN_OUT_REQUEST,\n    SIGN_OUT_SUCCESS,\n\n    FETCH_MOVIES_SUCCESS,\n    FETCH_MOVIES_FAILURE,\n    FETCH_MOVIES_REQUEST,\n\n    CREATE_MOVIES_SUCCESS,\n    CREATE_MOVIES_FAILURE,\n    CREATE_MOVIES_REQUEST,\n\n    DELETE_MOVIES_SUCCESS,\n    DELETE_MOVIES_FAILURE,\n    DELETE_MOVIES_REQUEST,\n\n    UPDATE_MOVIES_SUCCESS,\n    UPDATE_MOVIES_FAILURE,\n    UPDATE_MOVIES_REQUEST,\n\n    FETCH_ONE_MOVIE_REQUEST,\n    FETCH_ONE_MOVIE_SUCCESS,\n    FETCH_ONE_MOVIE_FAILURE,\n\n    FILTER_MOVIE_REQUEST,\n    FILTER_MOVIE_SUCCESS,\n    FILTER_MOVIE_FAILURE,\n\n    EDIT_ON\n\n\n} from './action-types';\n\nimport { URL } from \"../components/URL\";\n\n// Sign up action creators\n\nconst signUpRequest = () =>{\n    return{\n        type: SIGN_UP_REQUEST,\n    };\n};\n\nconst signUpSuccess = (user) =>{\n    return{\n        type: SIGN_UP_SUCCESS,\n        payload: {\n            user\n        }\n    };\n};\n\nconst signUpFailure = (error) =>{\n    return {\n        type: SIGN_UP_FAILURE,\n        payload:error\n    };\n};\n\nexport const signUp = (user,history) =>{\n    return function (dispatch) {\n        dispatch(signUpRequest());\n        axios({\n            method:\"post\",\n            url: URL+'/signUp',\n            data: user,\n        })\n        .then((response)=>{\n            const {data} = response.data;\n            dispatch(signUpSuccess(data));\n            // history.push(\"/\")\n        })\n        .catch((error)=>{\n            if(error.response && error.response.status === 400){\n                dispatch(signUpFailure(error));\n            };\n           \n            dispatch(signUpFailure(error));\n        });\n    };\n};\n\n//Sign in action creators\n\nconst signInRequest = () =>{\n    return {\n        type: SIGN_IN_REQUEST\n    };\n};\n\nconst signInSuccess = (token) =>{\n    return {\n        type: SIGN_IN_SUCCESS,\n        payload:{\n            token\n        }\n    };\n};\n\nconst signInFailure = (error) =>{\n    console.log(\"ERROR FAILURE\",error)\n    return {\n        type: SIGN_IN_FAILURE,\n        payload: error,\n    };\n};\n\nexport const signIn = (payload,history) =>{\n    console.log(\"try to SIgn \",payload)\n    return async function (dispatch) {\n        console.log(\"try to SIgn \",payload)\n        dispatch(signInRequest);\n        try{\n            console.log(\"try to SIgn \",payload)\n           const res= await axios({\n                method:\"POST\",\n                url: URL+\"/signIn\",\n                data:payload,\n                headers:{\n                    \"Content-type\":\"application/json\",\n                    \"Accept\":\"application/json\",\n                }\n            })\n                \n                   \n                console.log(\"SIGN SUCC\",res)\n            const {token} = res.data;\n                console.log(\"RES SIGN IN\",res)\n                localStorage.setItem(\"USER-TOKEN\",token);\n                dispatch(signInSuccess(token));\n        }catch(error){\n            console.log(\"SIGN FAILURE\",error)\n            dispatch(signInFailure(error));\n        }\n        \n    };\n};\n\n\n// sign out action creators\n\nexport const signOutRequest = () =>{\n    return {\n        type: SIGN_OUT_REQUEST,\n    };\n};\n\nexport const signOutSuccess = () =>{\n    return {\n      type: SIGN_OUT_SUCCESS,\n    };\n  };\n\nexport const signOutFailure = () =>{\n    return {\n        type: SIGN_OUT_FAILURE\n    };\n};\n\nexport const signOut = (history) =>{\n    return function(dispatch){\n        dispatch(signOutRequest());\n        localStorage.clear();\n        if(localStorage.getItem(\"USER-TOKEN\")){\n            dispatch(signOutFailure());\n        }\n        else{\n            dispatch(signOutSuccess());\n        }\n    };\n}\n\n\n// fetch movies action creators\n\nconst fetchMoviesRequest = () =>{\n    return{\n        type: FETCH_MOVIES_REQUEST,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchMoviesSuccess = (movieData) =>{\n    \n    return{\n        type: FETCH_MOVIES_SUCCESS,\n        payload: {\n            movieData\n        }\n    };\n};\n\nconst fetchMoviesFailure = (error) =>{\n    return {\n        type: FETCH_MOVIES_FAILURE,\n        payload:error\n    };\n};\n\nexport const fetchMovie = (payload) =>{\n    \n    return async function (dispatch) {\n        dispatch(fetchMoviesRequest());\n        try{\n            const res = await axios({\n                    method:\"get\",\n                    url: URL+'/getallmovies',\n                    data: payload,\n                });\n                const result = res.data;\n              \n                dispatch(fetchMoviesSuccess(result));\n        }catch(err){\n            if(err.response && err.response.status === 401){\n                dispatch(signOut());\n            };\n                dispatch(fetchMoviesFailure(err));\n        }\n    };\n};\n\n// fetch ONE movie action creators\n\nconst fetchOneMoviesRequest = () =>{\n    return{\n        type: FETCH_ONE_MOVIE_REQUEST,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst fetchOneMoviesSuccess = (movieDataOne) =>{\n    \n    return{\n        type: FETCH_ONE_MOVIE_SUCCESS,\n        payload: \n            {movieDataOne}\n        \n    };\n};\n\nconst fetchOneMoviesFailure = (error) =>{\n    return {\n        type: FETCH_ONE_MOVIE_FAILURE,\n        payload:error\n    };\n};\n\nexport const fetchOneMovie = (movieDataOne) =>{\n   \n    return async function (dispatch) {\n        dispatch(fetchOneMoviesRequest());\n        try{\n            const res = await axios({\n                    method:\"post\",\n                    url: URL+'/getonemovie',\n                    data: movieDataOne,\n                    headers:{\n                        \"Content-type\":\"application/json\",\n                        \"Accept\":\"application/json\",\n                        Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n                    }\n                });\n                \n                const result = res.data;\n                dispatch(fetchOneMoviesSuccess(result));\n              \n                \n        }catch(err){\n            if(err.response && err.response.status === 401){\n                dispatch(signOut());\n            };\n                dispatch(fetchOneMoviesFailure(err));\n        }\n    };\n};\n\n// create Movie action\n\nconst createMovieRequest = () =>{\n    return{\n        type: CREATE_MOVIES_REQUEST,\n    };\n};\n\nconst createMovieSuccess = (createMovieData) =>{\n    return{\n        type: CREATE_MOVIES_SUCCESS,\n        payload: {\n            createMovieData\n        }\n    };\n};\n\nconst createMovieFailure = (error) =>{\n   \n    return {\n        type: CREATE_MOVIES_FAILURE,\n        payload:error\n    };\n};\n\nexport const createMovie =  (createMovieData) =>{\n    return async function (dispatch) {\n  \n        dispatch(createMovieRequest());\n    try{\n       const response = await axios({\n            method:\"post\",\n            url: URL+'/addmovie',\n            data: createMovieData,\n            headers:{\n                \"Content-type\":\"application/json\",\n                \"Accept\":\"application/json\",\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        });\n        const data = response.data;\n        dispatch(fetchMovie()); \n            \n        dispatch(createMovieSuccess(data));\n         \n           \n          \n    }catch(error){\n        if(error.response && error.response.status === 401){\n            dispatch(signOut());\n        };\n        dispatch(createMovieFailure(error));\n    }\n     \n    };\n};\n\n\n// Update Movie action\n\nconst updateMovieRequest = () =>{\n    return{\n        type: UPDATE_MOVIES_REQUEST,\n    };\n};\n\nconst updateMovieSuccess = (deleteMovieData) =>{\n    return{\n        type: UPDATE_MOVIES_SUCCESS,\n        payload: {\n            deleteMovieData\n        }\n    };\n};\n\nconst updateMovieFailure = (error) =>{\n    console.log(\"ERROROROOROROR\",error);\n    return {\n        type: UPDATE_MOVIES_FAILURE,\n        payload:error\n    };\n};\n\nexport const updateMovie =  (updateMovieData) =>{\n    return async function (dispatch) {\n        dispatch(updateMovieRequest());\n    try{\n       const response = await axios({\n            method:\"PUT\",\n            url: URL+'/updatemovie',\n            data: updateMovieData,\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        });\n        \n            const {data} = response;\n            if(!data.success){\n            \n                 dispatch(updateMovieFailure(data.msg));\n                 return false\n            }\n           \n            dispatch(fetchMovie());   \n            dispatch(updateMovieSuccess(data));\n    }catch(error){\n        if(error.response && error.response.status === 401){\n            dispatch(signOut());\n        };\n        dispatch(updateMovieFailure(error));\n    }\n     \n    };\n};\n\nexport const updateMovie2 =  async (updateMovieData,dispatch) =>{\n\n        dispatch(updateMovieRequest());\n    try{\n       const response = await axios({\n            method:\"PUT\",\n            url: URL+'/updatemovie',\n            data: updateMovieData,\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        });\n        \n            const {data} = response;\n            if(!data.success){\n                \n                 dispatch(updateMovieFailure(data.msg));\n\n                 return false\n            }\n            else{\n                dispatch(fetchMovie());   \n                dispatch(updateMovieSuccess(data));\n                return true\n            }\n           \n          \n    }catch(error){\n        if(error.response && error.response.status === 401){\n            dispatch(signOut());\n        };\n       \n        dispatch(updateMovieFailure(error));\n    }\n     \n    \n};\n\n// Delete Movie action\n\nconst deleteMovieRequest = () =>{\n    return{\n        type: DELETE_MOVIES_REQUEST,\n    };\n};\n\nconst deleteMovieSuccess = (deleteMovieData) =>{\n    return{\n        type: DELETE_MOVIES_SUCCESS,\n        payload: {\n            deleteMovieData\n        }\n    };\n};\n\nconst deleteMovieFailure = (error) =>{\n    return {\n        type: DELETE_MOVIES_FAILURE,\n        payload:error\n    };\n};\n\nexport const deleteMovie =  (deleteMovieData) =>{\n    return async function (dispatch) {\n        dispatch(deleteMovieRequest());\n    try{\n       const response = await axios({\n            method:\"DELETE\",\n            url: URL+'/deletemovie',\n            data: deleteMovieData,\n            headers:{\n                Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n            }\n        });\n        \n            const {data} = response;\n            dispatch(fetchMovie()); \n            \n            dispatch(deleteMovieSuccess(data));\n    }catch(error){\n        if(error.response && error.response.status === 401){\n            dispatch(signOut());\n        };\n       \n        dispatch(deleteMovieFailure(error));\n    }\n     \n    };\n};\n\n//Action Toggle Edit\nconst toggleEditSuccess = (editData) =>{\n    return{\n        type: EDIT_ON,\n        payload: {\n            editData\n        }\n    };\n};\nexport const toggleEditTrue = () =>{\n    return{\n        type: EDIT_ON,\n      \n    };\n};\n\n\nexport const toggleEdit = (editData) =>{\n            console.log(\"edit\",editData);\n           \n    return async function(dispatch){\n        try{\n        dispatch(fetchOneMovie(editData));\n         dispatch(toggleEditSuccess())\n         dispatch(fetchMovie());\n        }\n        catch(error){\n\n        }\n    }\n};\n\n// Filter movie action creators\n\nconst filterMoviesRequest = () =>{\n    return{\n        type: FILTER_MOVIE_REQUEST,\n        payload: {\n            loading: true\n          }\n    };\n};\n\nconst filterMoviesSuccess = (movieFilterData) =>{\n    \n    return{\n        type: FILTER_MOVIE_SUCCESS,\n        payload: \n            {movieFilterData}\n        \n    };\n};\n\nconst filterMoviesFailure = (error) =>{\n    return {\n        type: FILTER_MOVIE_FAILURE,\n        payload:error\n    };\n};\n\nexport const filterMovie = (movieFilterData) =>{\n   \n    return async function (dispatch) {\n        dispatch(filterMoviesRequest());\n        try{\n            const res = await axios({\n                    method:\"post\",\n                    url: URL+'/searchmovie',\n                    data: movieFilterData,\n                    headers:{\n                        \"Content-type\":\"application/json\",\n                        \"Accept\":\"application/json\",\n                        Authorization:`Bearer ${localStorage.getItem(\"USER-TOKEN\")}`\n                    }\n                });\n                \n                const result = res.data.data;\n                    console.log(\"result FILTER\",res)\n              \n                dispatch(filterMoviesSuccess(result));\n        }catch(err){\n            if(err.response && err.response.status === 401){\n            dispatch(signOut());\n        };\n                dispatch(filterMoviesFailure(err));\n        }\n    };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}